(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2378e3"],{fc2b:function(s){s.exports=JSON.parse('{"created_at":"2022-01-19T23:40:55+08:00","excerpt":"In mathematical terms, the sequence $F_{n}$ of Fibonacci numbers is defined by the recurrence relation","html":"<p>In mathematical terms, the sequence <script type=\\"math/tex\\">F_{n}<\/script> of Fibonacci numbers is defined by the recurrence relation</p>\\n<p>\\n<script type=\\"math/tex; mode=display\\">\\nF_{1}=1; F_{2}=1; F_{n}=F_{n-1}+F_{n-2} (n>2).\\n<\/script>\\n</p>\\n<p>DZY loves Fibonacci numbers very much. Today DZY gives you an array consisting of <script type=\\"math/tex\\">n<\/script> integers: <script type=\\"math/tex\\">a_{1},a_{2},...,a_{n}<\/script>. Moreover, there are <script type=\\"math/tex\\">m<\/script> queries, each query has one of the two types:</p>\\n<ul>\\n<li>Format of the query <code>1 l r</code>. In reply to the query, you need to add <script type=\\"math/tex\\">F_{i-l+1}<\/script> to each element <script type=\\"math/tex\\">a_{i}<\/script>, where <script type=\\"math/tex\\">l<=i<=r<\/script>.</li>\\n<li>Format of the query <code>2 l r</code>. In reply to the query you should output the value of <script type=\\"math/tex\\">\\\\sum_{i=l}^r a_i<\/script> modulo <script type=\\"math/tex\\">1000000009 (10^{9}+9)<\/script>.</li>\\n</ul>\\n<p>Help DZY reply to all the queries.</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>The first line of the input contains two integers <script type=\\"math/tex\\">n<\/script> and <script type=\\"math/tex\\">m<\/script> ( <script type=\\"math/tex\\">1<=n,m<=300000<\/script> ). The second line contains <script type=\\"math/tex\\">n<\/script> integers <script type=\\"math/tex\\">a_{1},a_{2},...,a_{n} (1\\\\le a_{i}\\\\le 10^{9})<\/script> — initial array <script type=\\"math/tex\\">a<\/script>.</p>\\n<p>Then, <script type=\\"math/tex\\">m<\/script> lines follow. A single line describes a single query in the format given in the statement. It is guaranteed that for each query inequality <script type=\\"math/tex\\">1\\\\le l\\\\le r\\\\le n<\/script> holds.</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>For each query of the second type, print the value of the sum on a single line.</p>\\n<h2 id=\\"sample-input\\">Sample Input</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5\\n6</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>4 4\\n1 2 3 4\\n1 1 4\\n2 1 4\\n1 2 4\\n2 1 3\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"sample-output\\">Sample Output</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>17\\n12\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>斐波那契数列有个公式</p>\\n<p>\\n<script type=\\"math/tex; mode=display\\">\\nF_i = \\\\frac{1}{\\\\sqrt{5}} [(\\\\frac{1+\\\\sqrt{5}}{2})^n - (\\\\frac{1-\\\\sqrt{5}}{2})^n]\\n<\/script>\\n</p>\\n<p>然后可以转化为用线段树维护等比数列求和信息即可，注意到运算是在<script type=\\"math/tex\\">\\\\mod 10^9 + 9<\/script>下进行的，于是 <script type=\\"math/tex\\">\\\\frac{1}{2}, \\\\frac{1}{\\\\sqrt{5}}<\/script> 得用求逆元的方法转化成整数，其中 <script type=\\"math/tex\\">\\\\sqrt{5}<\/script> 恰好有二次剩余 <script type=\\"math/tex\\">383008016<\/script>。</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>  1\\n  2\\n  3\\n  4\\n  5\\n  6\\n  7\\n  8\\n  9\\n 10\\n 11\\n 12\\n 13\\n 14\\n 15\\n 16\\n 17\\n 18\\n 19\\n 20\\n 21\\n 22\\n 23\\n 24\\n 25\\n 26\\n 27\\n 28\\n 29\\n 30\\n 31\\n 32\\n 33\\n 34\\n 35\\n 36\\n 37\\n 38\\n 39\\n 40\\n 41\\n 42\\n 43\\n 44\\n 45\\n 46\\n 47\\n 48\\n 49\\n 50\\n 51\\n 52\\n 53\\n 54\\n 55\\n 56\\n 57\\n 58\\n 59\\n 60\\n 61\\n 62\\n 63\\n 64\\n 65\\n 66\\n 67\\n 68\\n 69\\n 70\\n 71\\n 72\\n 73\\n 74\\n 75\\n 76\\n 77\\n 78\\n 79\\n 80\\n 81\\n 82\\n 83\\n 84\\n 85\\n 86\\n 87\\n 88\\n 89\\n 90\\n 91\\n 92\\n 93\\n 94\\n 95\\n 96\\n 97\\n 98\\n 99\\n100\\n101\\n102</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;cstdio&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;cmath&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">MAXN</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">300007</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">MOD</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">1e9</span><span class=\\"o\\">+</span><span class=\\"mi\\">9</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"c1\\">// Fi = a1*q1^n + a2*q2^n</span>\\n<span class=\\"c1\\">// inv_2 * 2 % MOD == 1</span>\\n<span class=\\"c1\\">// inv_1mqi * (1-qi+MOD) % MOD == 1, for i = 1, 2</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">s5</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">383008016</span><span class=\\"p\\">,</span> <span class=\\"n\\">s5inv</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">276601605</span><span class=\\"p\\">,</span> <span class=\\"n\\">inv_2</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">500000005</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">q1</span> <span class=\\"o\\">=</span> <span class=\\"p\\">((</span><span class=\\"mi\\">1</span><span class=\\"o\\">+</span><span class=\\"n\\">s5</span><span class=\\"p\\">)</span><span class=\\"o\\">*</span><span class=\\"n\\">inv_2</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">,</span> <span class=\\"n\\">q2</span> <span class=\\"o\\">=</span> <span class=\\"p\\">((</span><span class=\\"mi\\">1</span><span class=\\"o\\">-</span><span class=\\"n\\">s5</span><span class=\\"o\\">+</span><span class=\\"n\\">MOD</span><span class=\\"p\\">)</span><span class=\\"o\\">*</span><span class=\\"n\\">inv_2</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">inv_1mq1</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">308495996</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">inv_1mq2</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">691504012</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">a1</span> <span class=\\"o\\">=</span> <span class=\\"n\\">s5inv</span><span class=\\"p\\">,</span> <span class=\\"n\\">a2</span> <span class=\\"o\\">=</span> <span class=\\"n\\">MOD</span> <span class=\\"o\\">-</span> <span class=\\"n\\">s5inv</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">;</span>\\n<span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">];</span>\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Node</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">tag</span><span class=\\"p\\">;</span>\\n  <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">val</span><span class=\\"p\\">,</span> <span class=\\"n\\">a1</span><span class=\\"p\\">,</span> <span class=\\"n\\">a2</span><span class=\\"p\\">;</span>\\n  <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">p1</span><span class=\\"p\\">,</span> <span class=\\"n\\">p2</span><span class=\\"p\\">;</span>  <span class=\\"c1\\">// pi = (1-qi^n)/(1-qi)</span>\\n<span class=\\"p\\">}</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">left</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"n\\">i</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span>\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">right</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">update</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">a1</span><span class=\\"p\\">,</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">a2</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">+</span> <span class=\\"p\\">(</span><span class=\\"n\\">a1</span><span class=\\"o\\">*</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">p1</span> <span class=\\"o\\">+</span> <span class=\\"n\\">a2</span><span class=\\"o\\">*</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">p2</span><span class=\\"p\\">))</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a1</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a1</span> <span class=\\"o\\">+</span> <span class=\\"n\\">a1</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a2</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a2</span> <span class=\\"o\\">+</span> <span class=\\"n\\">a2</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a1</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a1</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a2</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a2</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">rc</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a1</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a2</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">,</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a1</span> <span class=\\"o\\">*</span> <span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"o\\">-</span><span class=\\"n\\">l</span><span class=\\"p\\">])</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">,</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">a2</span> <span class=\\"o\\">*</span> <span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"o\\">-</span><span class=\\"n\\">l</span><span class=\\"p\\">])</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">build</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">len</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"o\\">-</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">p1</span> <span class=\\"o\\">=</span> <span class=\\"p\\">((</span><span class=\\"mi\\">1</span><span class=\\"o\\">+</span><span class=\\"n\\">MOD</span><span class=\\"o\\">-</span><span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"n\\">len</span><span class=\\"p\\">])</span> <span class=\\"o\\">*</span> <span class=\\"n\\">inv_1mq1</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">p2</span> <span class=\\"o\\">=</span> <span class=\\"p\\">((</span><span class=\\"mi\\">1</span><span class=\\"o\\">+</span><span class=\\"n\\">MOD</span><span class=\\"o\\">-</span><span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"n\\">len</span><span class=\\"p\\">])</span> <span class=\\"o\\">*</span> <span class=\\"n\\">inv_1mq2</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">==</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">+</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">modify</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span>\\n    <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"p\\">(</span><span class=\\"n\\">a1</span><span class=\\"o\\">*</span><span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"o\\">-</span><span class=\\"n\\">ql</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">])</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">,</span> <span class=\\"p\\">(</span><span class=\\"n\\">a2</span><span class=\\"o\\">*</span><span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"o\\">-</span><span class=\\"n\\">ql</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">])</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">+</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"nf\\">query</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"k\\">return</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">return</span> <span class=\\"p\\">(</span><span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">)</span> <span class=\\"o\\">+</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">))</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">prep</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">q1n</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span><span class=\\"o\\">*</span><span class=\\"n\\">q1</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">q2n</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span><span class=\\"o\\">*</span><span class=\\"n\\">q2</span><span class=\\"p\\">)</span> <span class=\\"o\\">%</span> <span class=\\"n\\">MOD</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">op</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">m</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"o\\">+</span><span class=\\"n\\">i</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">prep</span><span class=\\"p\\">();</span>\\n\\n  <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">--</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">op</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">qr</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">1</span><span class=\\"p\\">)</span> <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%lld</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">));</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"data structures","url":"/tags/data-structures"},{"name":"math","url":"/tags/math"}],"title":"CF-446C DZY Loves Fibonacci Numbers","updated_at":"2022-01-19T23:40:55+08:00","url":"/docs/data-structures/segment-tree/cf-446c"}')}}]);
//# sourceMappingURL=chunk-2d2378e3.2eb5f8c6.js.map