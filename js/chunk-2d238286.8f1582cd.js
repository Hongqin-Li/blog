(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d238286"],{fdd6:function(s){s.exports=JSON.parse('{"created_at":"2022-01-26T22:45:21+08:00","excerpt":"几乎整个 Byteland 王国都被森林和河流所覆盖。小点的河汇聚到一起，形成了稍大点的河。就这样，所有的河水都汇聚并流进了一条大河，最后这条大河流进了大海。这条大河的入海口处有一个村庄名叫 Bytetown。","html":"<p>几乎整个 Byteland 王国都被森林和河流所覆盖。小点的河汇聚到一起，形成了稍大点的河。就这样，所有的河水都汇聚并流进了一条大河，最后这条大河流进了大海。这条大河的入海口处有一个村庄名叫 Bytetown。</p>\\n<p>在 Byteland 国，有 <script type=\\"math/tex\\">n<\/script> 个伐木的村庄，这些村庄都座落在河边。目前在 Bytetown，有一个巨大的伐木场，它处理着全国砍下的所有木料。木料被砍下后，顺着河流而被运到 Bytetown 的伐木场。Byteland 的国王决定，为了减少运输木料的费用，再额外地建造 <script type=\\"math/tex\\">k<\/script> 个伐木场。这 <script type=\\"math/tex\\">k<\/script> 个伐木场将被建在其他村庄里。这些伐木场建造后，木料就不用都被送到 Bytetown 了，它们可以在运输过程中第一个碰到的新伐木场被处理。显然，如果伐木场座落的那个村子就不用再付运送木料的费用了。它们可以直接被本村的伐木场处理。</p>\\n<p>注：所有的河流都不会分叉，形成一棵树，根结点是 Bytetown。</p>\\n<p>国王的大臣计算出了每个村子每年要产多少木料，你的任务是决定在哪些村子建设伐木场能获得最小的运费。其中运费的计算方法为：每一吨木料每千米 <script type=\\"math/tex\\">1<\/script> 分钱。</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行包括两个整数 <script type=\\"math/tex\\">n,k<\/script>。<script type=\\"math/tex\\">n<\/script> 为村庄数，<script type=\\"math/tex\\">k<\/script> 为要建的伐木场的数目。除了 Bytetown 外，每个村子依次被命名为 <script type=\\"math/tex\\">1,2,3\\\\ldots n<\/script>，Bytetown 被命名为 <script type=\\"math/tex\\">0<\/script>。</p>\\n<p>第 <script type=\\"math/tex\\">2<\/script> 到第 <script type=\\"math/tex\\">(n+1)<\/script> 行，每行 <script type=\\"math/tex\\">3<\/script> 个整数，第 <script type=\\"math/tex\\">(i+1)<\/script> 行的整数分别代表，分别表示每年 <script type=\\"math/tex\\">i<\/script> 村子产的木料的块数 <script type=\\"math/tex\\">w_i<\/script>，离 <script type=\\"math/tex\\">i<\/script> 村子下游最近的村子 <script type=\\"math/tex\\">v_i<\/script>（即 <script type=\\"math/tex\\">i<\/script> 村子的父结点），<script type=\\"math/tex\\">v_i<\/script> 到 <script type=\\"math/tex\\">i<\/script> 的距离 <script type=\\"math/tex\\">d_i<\/script>（千米）。</p>\\n<ul>\\n<li>对于 <script type=\\"math/tex\\">100\\\\%<\/script> 的数据，保证 <script type=\\"math/tex\\">2\\\\le n\\\\le 100<\/script>，<script type=\\"math/tex\\">1\\\\le k\\\\le \\\\min(n,50)<\/script>，<script type=\\"math/tex\\">0\\\\le v_i\\\\le n<\/script>，<script type=\\"math/tex\\">0\\\\le w_i\\\\le 10^4<\/script>，<script type=\\"math/tex\\">1\\\\le d_i\\\\le 10^4<\/script>。</li>\\n<li>保证每年所有的木料流到 bytetown 的运费不超过 <script type=\\"math/tex\\">2\\\\times 10^9<\/script> 分。</li>\\n</ul>\\n<h2 id=\\"output\\">Output</h2>\\n<p>输出最小花费，单位为分。</p>\\n<h2 id=\\"examples\\">Examples</h2>\\n<p>Input 1:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>4 2\\n1 0 1\\n1 1 10\\n10 2 5\\n1 2 3\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output 1:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>4\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>树上背包好题</p>\\n<p>令 <script type=\\"math/tex\\">f[u][p][i]<\/script> 为 <script type=\\"math/tex\\">u<\/script> 子树中建了（不超过）<script type=\\"math/tex\\">i<\/script> 个且剩余木头（最远）流至 <script type=\\"math/tex\\">p<\/script> 节点。显然，答案即 <script type=\\"math/tex\\">f[0][0][k]<\/script>。然后同树上背包类似，依次合并每个子节点的状态即可。</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;bits/stdc++.h&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">using</span> <span class=\\"n\\">ll</span> <span class=\\"o\\">=</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">N</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">103</span><span class=\\"p\\">,</span> <span class=\\"n\\">K</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">53</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"n\\">ll</span> <span class=\\"n\\">INF</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">1e18</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">k</span><span class=\\"p\\">;</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">d</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n<span class=\\"n\\">ll</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">][</span><span class=\\"n\\">N</span><span class=\\"p\\">][</span><span class=\\"n\\">K</span><span class=\\"p\\">];</span>\\n<span class=\\"n\\">vector</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">child</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">dfs</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">vector</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">vector</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">ll</span><span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">g</span><span class=\\"p\\">(</span><span class=\\"n\\">N</span><span class=\\"p\\">,</span> <span class=\\"n\\">vector</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">ll</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">K</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">));</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"k\\">auto</span> <span class=\\"nl\\">v</span><span class=\\"p\\">:</span> <span class=\\"n\\">child</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">])</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">dfs</span><span class=\\"p\\">(</span><span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">p</span> <span class=\\"o\\">=</span> <span class=\\"n\\">u</span><span class=\\"p\\">;</span> <span class=\\"n\\">p</span> <span class=\\"o\\">!=</span> <span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">p</span> <span class=\\"o\\">=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">])</span>\\n      <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">k</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&gt;=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">--</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n        <span class=\\"n\\">ll</span> <span class=\\"n\\">a</span> <span class=\\"o\\">=</span> <span class=\\"n\\">INF</span><span class=\\"p\\">;</span>\\n        <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">j</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">j</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">j</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n          <span class=\\"n\\">a</span> <span class=\\"o\\">=</span> <span class=\\"n\\">min</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">,</span> <span class=\\"n\\">g</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">][</span><span class=\\"n\\">j</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">][</span><span class=\\"n\\">p</span><span class=\\"p\\">][</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"n\\">j</span><span class=\\"p\\">]);</span>\\n        <span class=\\"n\\">g</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">][</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a</span><span class=\\"p\\">;</span>\\n      <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">p</span> <span class=\\"o\\">=</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">dd</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">p</span> <span class=\\"o\\">!=</span> <span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">dd</span> <span class=\\"o\\">+=</span> <span class=\\"n\\">d</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">],</span> <span class=\\"n\\">p</span> <span class=\\"o\\">=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">])</span>\\n    <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">k</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">][</span><span class=\\"n\\">p</span><span class=\\"p\\">][</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">min</span><span class=\\"p\\">(</span><span class=\\"n\\">i</span> <span class=\\"o\\">&gt;=</span> <span class=\\"mi\\">1</span> <span class=\\"o\\">?</span> <span class=\\"n\\">g</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">][</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span><span class=\\"o\\">:</span> <span class=\\"n\\">INF</span><span class=\\"p\\">,</span> <span class=\\"n\\">g</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">][</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"p\\">(</span><span class=\\"n\\">ll</span><span class=\\"p\\">)</span><span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span><span class=\\"o\\">*</span><span class=\\"n\\">dd</span><span class=\\"p\\">);</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">cin</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">n</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">k</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">cin</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">d</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">child</span><span class=\\"p\\">[</span><span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]].</span><span class=\\"n\\">push_back</span><span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">dfs</span><span class=\\"p\\">(</span><span class=\\"mi\\">0</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">cout</span> <span class=\\"o\\">&lt;&lt;</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">][</span><span class=\\"mi\\">0</span><span class=\\"p\\">][</span><span class=\\"n\\">k</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"dp","url":"/tags/dp"}],"title":"IOI-2005 Riv 河流","updated_at":"2022-01-26T22:45:21+08:00","url":"/docs/dp/tree-based-dp/luogu-3354"}')}}]);
//# sourceMappingURL=chunk-2d238286.8f1582cd.js.map