(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2088c9"],{a4ee:function(e){e.exports=JSON.parse('{"name":"Dynamic Programming","description":"Dynamic programming, like the divide-and-conquer method, solves problems by combining the solutions to subproblems. A dynamic-programming algorithm solves each subproblem just once and then saves its answer in a table, thereby avoiding the work of recomputing the answer every time it solves each subproblem.","items":[{"tags":[{"name":"data structures","url":"/tags/data-structures"},{"name":"dp","url":"/tags/dp"}],"title":"CF-1389F Bicolored Segments","excerpt":"You are given n segments $[l_1,r_1],[l_2,r_2], \\\\dots,[l_n,r_n]$. Each segment has one of two colors: the i-th segment\'s color is $t_i$.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/data-structures/segment-tree/cf-1389f"},{"tags":[{"name":"data structures","url":"/tags/data-structures"},{"name":"divide-and-conquer","url":"/tags/divide-and-conquer"},{"name":"dp","url":"/tags/dp"}],"title":"CF-1404C Fixed Point Removal","excerpt":"Let $a_1, \\\\ldots, a_n$ be an array of $n$ positive integers. In one operation, you can choose an index $i$ such that $a_i = i$, and remove $a_i$ from the array (after the removal, the remaining parts are concatenated).","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/data-structures/segment-tree/cf-1404c"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"动态规划笔记","excerpt":"例题：[洛谷P1833 樱花](https://www.luogu.com.cn/problem/P1833)","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/course/dp"},{"tags":[{"name":"dfs","url":"/tags/dfs"},{"name":"dp","url":"/tags/dp"}],"title":"洛谷P3052 [USACO12MAR] Cows in a Skyscraper G","excerpt":"A little known fact about Bessie and friends is that they love stair climbing races. A better known fact is that cows really don\'t like going down stairs. So after the cows finish racing to the top of their favorite skyscraper, they had a problem. Refusing to climb back down using the stairs, the cows are forced to use the elevator in order to get back to the ground floor.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/search/luogu-3052"},{"tags":[{"name":"bfs","url":"/tags/bfs"},{"name":"dp","url":"/tags/dp"}],"title":"洛谷P2901 Cow Jogging G","excerpt":"贝西终于尝到了懒惰的后果，决定每周从谷仓到池塘慢跑几次来健身。当然，她不想跑得太累，所以她只打算从谷仓慢跑下山到池塘，然后悠闲地散步回谷仓。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/search/luogu-2901"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P1833 樱花","excerpt":"爱与愁大神后院里种了 $n$ 棵樱花树，每棵都有美学值 $C_i$。爱与愁大神在每天上学前都会来赏花。爱与愁大神可是生物学霸，他懂得如何欣赏樱花：一种樱花树看一遍过，一种樱花树最多看 $A_i$ 遍，一种樱花树可以看无数遍。但是看每棵樱花树都有一定的时间 $T_i$。爱与愁大神离去上学的时间只剩下一小会儿了。求解看哪几棵樱花树能使美学值最高且爱与愁大神能准时（或提早）去上学。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/luogu-1833"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-930C Teodor is not a liar!","excerpt":"Young Teodor enjoys drawing. His favourite hobby is drawing segments with integer borders inside his huge $[1;m]$ segment. One day Teodor noticed that picture he just drawn has one interesting feature: there doesn\'t exist an integer point, that belongs each of segments in the picture. Having discovered this fact, Teodor decided to share it with Sasha.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/cf-930c"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P2340 [USACO03FALL]Cow Exhibition G","excerpt":"贝西有权选择让哪些奶牛参加展览。由于负的智商或情商会造成负面效果，所以贝西不希望出展奶牛的智商之和小于零，或情商之和小于零。满足这两个条件下，她希望出展奶牛的智商与情商之和越大越好，请帮助贝西求出这个最大值。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/luogu-2340"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P4342 [IOI1998]Polygon","excerpt":"Polygon is a game for one player that starts on a polygon with $N$ vertices, like the one in Figure 1, where $N=4$. Each vertex is labelled with an integer and each edge is labelled with either the symbol + (addition) or the symbol * (product). The edges are numbered from $1$ to $N$.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/luogu-4342"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-149D Coloring Brackets","excerpt":"Once Petya read a problem about a bracket sequence. He gave it much thought but didn\'t find a solution. Today you will face it.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/cf-149d"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P1064 金明的预算方案","excerpt":"金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间金明自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过 $n$ 元钱就行”。今天一早，金明就开始做预算了，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/luogu-1064"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-1271D Portals","excerpt":"You play a strategic video game (yeah, we ran out of good problem legends). In this game you control a large army, and your goal is to conquer $n$ castles of your opponent.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/cf-1271d"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-1393D Rarity and New Dress","excerpt":"Carousel Boutique is busy again! Rarity has decided to visit the pony ball and she surely needs a new dress, because going out in the same dress several times is a sign of bad manners. First of all, she needs a dress pattern, which she is going to cut out from the rectangular piece of the multicolored fabric.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/cf-1393d"},{"tags":[{"name":"dp","url":"/tags/dp"},{"name":"number theory","url":"/tags/number-theory"}],"title":"CF-980D Perfect Groups","excerpt":"SaMer has written the greatest test case of all time for one of his problems. For a given array of integers, the problem asks to find the minimum number of groups the array can be divided into, such that the product of any pair of integers in the same group is a perfect square.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/cf-980d"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-213C Relay Race","excerpt":"Furik and Rubik take part in a relay race. The race will be set up on a large square with the side of $n$ meters. The given square is split into n×n n×n n×n cells (represented as unit squares), each cell has some number.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/acm/dp/cf-213c"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"HNOI-2008 玩具装箱","excerpt":"P 教授要去看奥运，但是他舍不下他的玩具，于是他决定把所有的玩具运到北京。他使用自己的压缩器进行压缩，其可以将任意物品变成一堆，再放到一种特殊的一维容器中。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/dp-optimization/luogu-3195"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P2627 [USACO11OPEN]Mowing the Lawn G","excerpt":"在一年前赢得了小镇的最佳草坪比赛后，Farm John变得很懒，再也没有修剪过草坪。现在，新一轮的最佳草坪比赛又开始了，Farm John希望能够再次夺冠。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/dp-optimization/luogu-2627"},{"tags":[{"name":"dp","url":"/tags/dp"},{"name":"data structures","url":"/tags/data-structures"}],"title":"CF-372C Watching Fireworks is Fun","excerpt":"A festival will be held in a town\'s main street. There are $n$ sections in the main street. The sections are numbered $1$ through $n$ from left to right. The distance between each adjacent sections is $1$ .","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/dp-optimization/cf-372c"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"P1896 [SCOI2005]互不侵犯","excerpt":"在 $N\\\\times N$ 的棋盘里面放 $K$ 个国王，使他们互不攻击，共有多少种摆放方案。国王能攻击到它上下左右，以及左上左下右上右下八个方向上附近的各一个格子，共 $8$ 个格子。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/bitmask-dp/luogu-1896"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-1391D 505","excerpt":"A binary matrix is called good if every even length square sub-matrix has an odd number of ones.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/bitmask-dp/cf-1391d"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"SCOI-2009 windy 数","excerpt":"不含前导零且相邻两个数字之差至少为 $2$ 的正整数被称为 windy 数。windy 想知道，在 $a$ 和 $b$ 之间，包括 $a$ 和 $b$ ，总共有多少个 windy 数？","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/digit-dp/luogu-2657"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"SCOI-2015 小凸玩密室","excerpt":"小凸和小方相约玩密室逃脱，这个密室是一棵有 $n$ 个节点的完全二叉树，每个节点有一个灯泡。点亮所有灯泡即可逃出密室。每个灯泡有个权值 $a_i$，每条边也有个权值 $b_i$。点亮第一个灯泡不需要花费，之后每点亮一个新的灯泡 $v$ 的花费，等于上一个被点亮的灯泡 $u$ 到这个点 $v$ 的距离 $D_{u,v}$，乘以这个点的权值 $a_v$。在点灯的过程中，要保证任意时刻所有被点亮的灯泡必须连通，在点亮一个灯泡后必须先点亮其子树所有灯泡才能点亮其他灯泡。请告诉他们，逃出密室的最少花费是多少。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/luogu-4253"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P3047 [USACO12FEB]Nearby Cows G","excerpt":"Farmer John has noticed that his cows often move between nearby fields. Taking this into account, he wants to plant enough grass in each of his fields not only for the cows situated initially in that field, but also for cows visiting from nearby fields.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/luogu-3047"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF-1146F Leaf Partition","excerpt":"You are given a rooted tree with $n$ nodes, labeled from $1$ to $n$ . The tree is rooted at node $1$ . The parent of the $i$-th node is $p_i$. A leaf is node with no children. For a given set of leaves $L$, let $f(L)$ denote the smallest connected subgraph that contains all leaves $L$.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/cf-1146f"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"POI-2013 LUK-Triumphal arch","excerpt":"The king of Byteotia, Byteasar, is returning to his country after a victorious battle. In Byteotia, there are $n$ towns connected with only $n-1$ roads. It is known that every town can be reached from every other town by a unique route, consisting of one or more (direct) roads. (In other words, the road network forms a tree).","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/luogu-3554"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"CF708C Centroids","excerpt":"Tree is a connected acyclic graph. Suppose you are given a tree consisting of $n$ vertices. The vertex of this tree is called centroid if the size of each connected component that appears if this vertex is removed from the tree doesn\'t exceed $\\\\frac{n}{2}$.","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/cf-708c"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"IOI-2005 Riv 河流","excerpt":"几乎整个 Byteland 王国都被森林和河流所覆盖。小点的河汇聚到一起，形成了稍大点的河。就这样，所有的河水都汇聚并流进了一条大河，最后这条大河流进了大海。这条大河的入海口处有一个村庄名叫 Bytetown。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/luogu-3354"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"IOI-2008 Island","excerpt":"你准备浏览一个公园，该公园由 $N$ 个岛屿组成，当地管理部门从每个岛屿 $i$ 出发向另外一个岛屿建了一座长度为 $L_i$ 的桥，不过桥是可以双向行走的。同时，每对岛屿之间都有一艘专用的往来两岛之间的渡船。相对于乘船而言，你更喜欢步行。你希望经过的桥的总长度尽可能长，但受到以下的限制：","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/luogu-4381"},{"tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P6419 [COCI2014-2015#1] Kamp","excerpt":"一颗树 $n$ 个点，n−1n-1n−1 条边，经过每条边都要花费一定的时间，任意两个点都是联通的。","updated_at":"2022-01-19T23:40:55+08:00","created_at":"2022-01-19T23:40:55+08:00","url":"/docs/dp/tree-based-dp/luogu-6419"}],"url":"/tags/dp"}')}}]);
//# sourceMappingURL=chunk-2d2088c9.07cbccd1.js.map