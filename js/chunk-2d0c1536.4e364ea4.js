(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c1536"],{4620:function(s){s.exports=JSON.parse('{"created_at":"2020-10-17T12:00:02+08:00","excerpt":"游戏在一棵大小为 $n$ 的树上进行。其中每个点都有点权，第 $i$ 个点的点权为 $w_i$。","html":"<p>游戏在一棵大小为 <script type=\\"math/tex\\">n<\/script> 的树上进行。其中每个点都有点权，第 <script type=\\"math/tex\\">i<\/script> 个点的点权为 <script type=\\"math/tex\\">w_i<\/script>。</p>\\n<p>每一次系统会给出一条链，小 A 可以从这条链上找出两个点权不同的点 <script type=\\"math/tex\\">x,y<\/script>，他的得分是 <script type=\\"math/tex\\">w_x\\\\bmod w_y<\/script>。然后小 B 会从整棵树中选取两个小 A 没有选过的点，计分方式同小 A。</p>\\n<p>为了保持游戏难度，系统有时会增加一个点的权值。</p>\\n<p>当然，小 A 会尽可能使自己得分最大，他想知道这个值是多少。同时，他想知道，在自己得分最大的情况下，小 B 的最大得分是多少。</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行一个整数 <script type=\\"math/tex\\">n<\/script> 表示树的节点个数。</p>\\n<p>接下来 <script type=\\"math/tex\\">n-1<\/script> 行，每行两个整数 <script type=\\"math/tex\\">a,b<\/script>，表示 <script type=\\"math/tex\\">a,b<\/script> 之间有一条边。</p>\\n<p>接下来一行 <script type=\\"math/tex\\">n<\/script> 个整数，第 <script type=\\"math/tex\\">i<\/script> 个数表示第 <script type=\\"math/tex\\">i<\/script> 个点的点权。</p>\\n<p>接下来一行一个整数 <script type=\\"math/tex\\">q<\/script>。</p>\\n<p>接下来 <script type=\\"math/tex\\">q<\/script> 行，每行三个整数 <script type=\\"math/tex\\">opt,x,y<\/script>。</p>\\n<p>若 <script type=\\"math/tex\\">opt=0<\/script>，将 <script type=\\"math/tex\\">w_x<\/script> 增加 <script type=\\"math/tex\\">y<\/script>。</p>\\n<p>若 <script type=\\"math/tex\\">opt=1<\/script>，表示系统给出一条从 <script type=\\"math/tex\\">x<\/script> 到 <script type=\\"math/tex\\">y<\/script> 的链。</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>对于每一次 <script type=\\"math/tex\\">opt=1<\/script>，输出一行两个整数 <script type=\\"math/tex\\">suma,sumb<\/script>。分别表示小 A 的最大得分和在这情况下小 B 的最大得分 。</p>\\n<p>如果小 A 无法选出两个权值不同的点，那么只输出一个数 <script type=\\"math/tex\\">−1<\/script>。</p>\\n<h2 id=\\"sample-input\\">Sample Input</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>7\\n1 2\\n2 3\\n2 4\\n1 5\\n5 6\\n5 7\\n5 4 3 2 1 4 3\\n6\\n1 3 4\\n1 2 5\\n1 2 1\\n0 2 1\\n1 2 5\\n1 2 1\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"sample-output\\">Sample Output</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>3 4\\n4 3\\n4 3\\n1 4\\n-1\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>前置知识：树链剖分+线段树</p>\\n<p>易证，A的得分为链上第2大，B的得分可通过map计数，并去除A所选两个点权后，map中最大的两个值得到。其他就是超常规的链剖+线段树。</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>  1\\n  2\\n  3\\n  4\\n  5\\n  6\\n  7\\n  8\\n  9\\n 10\\n 11\\n 12\\n 13\\n 14\\n 15\\n 16\\n 17\\n 18\\n 19\\n 20\\n 21\\n 22\\n 23\\n 24\\n 25\\n 26\\n 27\\n 28\\n 29\\n 30\\n 31\\n 32\\n 33\\n 34\\n 35\\n 36\\n 37\\n 38\\n 39\\n 40\\n 41\\n 42\\n 43\\n 44\\n 45\\n 46\\n 47\\n 48\\n 49\\n 50\\n 51\\n 52\\n 53\\n 54\\n 55\\n 56\\n 57\\n 58\\n 59\\n 60\\n 61\\n 62\\n 63\\n 64\\n 65\\n 66\\n 67\\n 68\\n 69\\n 70\\n 71\\n 72\\n 73\\n 74\\n 75\\n 76\\n 77\\n 78\\n 79\\n 80\\n 81\\n 82\\n 83\\n 84\\n 85\\n 86\\n 87\\n 88\\n 89\\n 90\\n 91\\n 92\\n 93\\n 94\\n 95\\n 96\\n 97\\n 98\\n 99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;cstdio&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;algorithm&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;map&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">typedef</span> <span class=\\"n\\">pair</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">pii</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">MAXN</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">1e5</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Edge</span> <span class=\\"p\\">{</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">to</span><span class=\\"p\\">,</span> <span class=\\"n\\">nxt</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"o\\">*</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">nedges</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Node</span> <span class=\\"p\\">{</span><span class=\\"n\\">pair</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">val</span><span class=\\"p\\">;}</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"o\\">*</span><span class=\\"mi\\">4</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">,</span> <span class=\\"n\\">qx</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">son</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">nrnks</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">];</span>\\n<span class=\\"n\\">map</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">addedge</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"o\\">++</span><span class=\\"n\\">nedges</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]};</span>\\n  <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">nedges</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"n\\">pii</span> <span class=\\"nf\\">combine</span><span class=\\"p\\">(</span><span class=\\"k\\">const</span> <span class=\\"n\\">pii</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">p1</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"n\\">pii</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">p2</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span> <span class=\\"o\\">==</span> <span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">)</span>\\n    <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">,</span> <span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">)};</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">)</span>\\n    <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">,</span> <span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">)};</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">,</span> <span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">)};</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">pushup</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">rc</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">=</span> <span class=\\"n\\">combine</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">);</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">build</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">==</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"p\\">],</span> <span class=\\"mi\\">0</span><span class=\\"p\\">};</span>\\n  <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">p</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">p</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"o\\">|</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushup</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">modify</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">==</span> <span class=\\"n\\">ql</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">==</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span> <span class=\\"o\\">+=</span> <span class=\\"n\\">qx</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">p</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">p</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"o\\">|</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushup</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"n\\">pii</span> <span class=\\"nf\\">query</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"k\\">return</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">val</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">p</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">p</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"o\\">|</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">return</span> <span class=\\"n\\">combine</span><span class=\\"p\\">(</span><span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">));</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">};</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">dfs1</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">r</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"p\\">;</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">maxs</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">];</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">nxt</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">to</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">v</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">dfs1</span><span class=\\"p\\">(</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">u</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">+=</span> <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">];</span>\\n      <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">maxs</span><span class=\\"p\\">)</span> <span class=\\"n\\">son</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">maxs</span> <span class=\\"o\\">=</span> <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">];</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"o\\">++</span><span class=\\"n\\">nrnks</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">son</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">])</span> <span class=\\"n\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"n\\">son</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">],</span> <span class=\\"n\\">r</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">];</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">nxt</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">to</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">v</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">v</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">son</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">])</span> <span class=\\"n\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"n\\">pii</span> <span class=\\"nf\\">query2</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">pii</span> <span class=\\"n\\">ret</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">};</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(;</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">];</span> <span class=\\"n\\">u</span> <span class=\\"o\\">=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]])</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]])</span> <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]],</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">ret</span> <span class=\\"o\\">=</span> <span class=\\"n\\">combine</span><span class=\\"p\\">(</span><span class=\\"n\\">ret</span><span class=\\"p\\">,</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">nrnks</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">));</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">])</span> <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">],</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">return</span> <span class=\\"n\\">combine</span><span class=\\"p\\">(</span><span class=\\"n\\">ret</span><span class=\\"p\\">,</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">nrnks</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">));</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">nq</span><span class=\\"p\\">,</span> <span class=\\"n\\">op</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">n</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">addedge</span><span class=\\"p\\">(</span><span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">),</span> <span class=\\"n\\">addedge</span><span class=\\"p\\">(</span><span class=\\"n\\">y</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"n\\">dfs1</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">),</span> <span class=\\"n\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"o\\">+</span><span class=\\"n\\">i</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]]</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">nrnks</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">nq</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">nq</span><span class=\\"o\\">--</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">op</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">],</span> <span class=\\"n\\">qx</span> <span class=\\"o\\">=</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span>\\n      <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">nrnks</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"n\\">y</span><span class=\\"p\\">]</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n      <span class=\\"k\\">auto</span> <span class=\\"n\\">it</span> <span class=\\"o\\">=</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">.</span><span class=\\"n\\">find</span><span class=\\"p\\">(</span><span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]);</span>\\n      <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"o\\">--</span><span class=\\"n\\">it</span><span class=\\"o\\">-&gt;</span><span class=\\"n\\">second</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span><span class=\\"p\\">)</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">.</span><span class=\\"n\\">erase</span><span class=\\"p\\">(</span><span class=\\"n\\">it</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">+=</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span>\\n    <span class=\\"p\\">}</span>\\n    <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">pii</span> <span class=\\"n\\">p</span> <span class=\\"o\\">=</span> <span class=\\"n\\">query2</span><span class=\\"p\\">(</span><span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n      <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n        <span class=\\"kt\\">int</span> <span class=\\"n\\">bw</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n        <span class=\\"k\\">auto</span> <span class=\\"n\\">it</span> <span class=\\"o\\">=</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">.</span><span class=\\"n\\">end</span><span class=\\"p\\">();</span>\\n        <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"mi\\">2</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n          <span class=\\"n\\">it</span> <span class=\\"o\\">--</span><span class=\\"p\\">;</span>\\n          <span class=\\"k\\">while</span> <span class=\\"p\\">((</span><span class=\\"n\\">it</span><span class=\\"o\\">-&gt;</span><span class=\\"n\\">first</span> <span class=\\"o\\">==</span> <span class=\\"n\\">p</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span> <span class=\\"o\\">||</span> <span class=\\"n\\">it</span><span class=\\"o\\">-&gt;</span><span class=\\"n\\">first</span> <span class=\\"o\\">==</span> <span class=\\"n\\">p</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">)</span>\\n                 <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">it</span><span class=\\"o\\">-&gt;</span><span class=\\"n\\">second</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">1</span><span class=\\"p\\">)</span> <span class=\\"n\\">it</span> <span class=\\"o\\">--</span><span class=\\"p\\">;</span>\\n          <span class=\\"n\\">bw</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">it</span><span class=\\"o\\">-&gt;</span><span class=\\"n\\">first</span><span class=\\"p\\">;</span>\\n        <span class=\\"p\\">}</span>\\n        <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d %d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">,</span> <span class=\\"n\\">bw</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]);</span>\\n      <span class=\\"p\\">}</span>\\n      <span class=\\"k\\">else</span> <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;-1</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"data structures","url":"/tags/data-structures"}],"title":"洛谷-P6157 有趣的游戏","updated_at":"2020-10-17T12:00:02+08:00","url":"/docs/data-structures/segment-tree/luogu-6157"}')}}]);
//# sourceMappingURL=chunk-2d0c1536.4e364ea4.js.map