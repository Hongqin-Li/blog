(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0df425"],{"88c2":function(s){s.exports=JSON.parse('{"created_at":"2020-10-17T10:05:41+08:00","excerpt":"P 教授要去看奥运，但是他舍不下他的玩具，于是他决定把所有的玩具运到北京。他使用自己的压缩器进行压缩，其可以将任意物品变成一堆，再放到一种特殊的一维容器中。","html":"<p>P 教授要去看奥运，但是他舍不下他的玩具，于是他决定把所有的玩具运到北京。他使用自己的压缩器进行压缩，其可以将任意物品变成一堆，再放到一种特殊的一维容器中。</p>\\n<p>P 教授有编号为 <script type=\\"math/tex\\">1 \\\\cdots n<\/script> 的 <script type=\\"math/tex\\">n<\/script> 件玩具，第 <script type=\\"math/tex\\">i<\/script> 件玩具经过压缩后的一维长度为 <script type=\\"math/tex\\">C_i<\/script>。</p>\\n<p>为了方便整理，P教授要求：</p>\\n<ul>\\n<li>\\n<p>在一个一维容器中的玩具编号是连续的。</p>\\n</li>\\n<li>\\n<p>同时如果一个一维容器中有多个玩具，那么两件玩具之间要加入一个单位长度的填充物。形式地说，如果将第 <script type=\\"math/tex\\">i<\/script> 件玩具到第 <script type=\\"math/tex\\">j<\/script> 个玩具放到一个容器中，那么容器的长度将为 <script type=\\"math/tex\\">x=j-i+\\\\sum\\\\limits_{k=i}^{j}C_k<\/script>。</p>\\n</li>\\n</ul>\\n<p>制作容器的费用与容器的长度有关，根据教授研究，如果容器长度为 <script type=\\"math/tex\\">x<\/script>，其制作费用为 <script type=\\"math/tex\\">(x-L)^2<\/script>。其中 <script type=\\"math/tex\\">L<\/script> 是一个常量。P 教授不关心容器的数目，他可以制作出任意长度的容器，甚至超过 <script type=\\"math/tex\\">L<\/script>。但他希望所有容器的总费用最小。</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行有两个整数，用一个空格隔开，分别代表 <script type=\\"math/tex\\">n<\/script> 和 <script type=\\"math/tex\\">L<\/script>。</p>\\n<p>第 <script type=\\"math/tex\\">2<\/script> 到 第 <script type=\\"math/tex\\">(n+1)<\/script> 行，每行一个整数，第 <script type=\\"math/tex\\">(i+1)<\/script> 行的整数代表第 <script type=\\"math/tex\\">i<\/script> 件玩具的长度 <script type=\\"math/tex\\">C_i<\/script>。</p>\\n<p>对于全部的测试点，<script type=\\"math/tex\\">1 \\\\leq n \\\\leq 5 \\\\times 10^4<\/script>，<script type=\\"math/tex\\">1 \\\\leq L \\\\leq 10^7<\/script>，<script type=\\"math/tex\\">1 \\\\leq C_i \\\\leq 10^7<\/script>。</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>输出一行一个整数，代表所有容器的总费用最小是多少。</p>\\n<h2 id=\\"examples\\">Examples</h2>\\n<p>Input 1:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5\\n6</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>5 4\\n3\\n4\\n2\\n1\\n4\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output 1:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>1\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Input 2:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>10 100\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output 2:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>1296\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>斜率优化 dp 例题</p>\\n<p>首先写出状态转移方程 <script type=\\"math/tex\\">f_i = \\\\min_{0 \\\\le j < i} \\\\left\\\\{ f_j + \\\\left( i - j - 1 - L - \\\\sum_{k=j+1}^i{} C_k \\\\right)^2\\\\right\\\\}<\/script>\\n</p>\\n<p>化简一下，暂时隐藏 <script type=\\"math/tex\\">\\\\min<\/script>，并令 <script type=\\"math/tex\\">s_i = \\\\sum_{i=1}^{i} c_i + i<\/script>，整理一下可得</p>\\n<p>\\n<script type=\\"math/tex; mode=display\\">\\n\\\\underbrace{f[i] - {s_i}^2 + 2(L+1)s_i}_b =\\n\\\\underbrace{\\\\left(f[j] + s_j^2 + 2(l+1)s_j + (L+1)^2\\\\right)}_{y_j} -\\n\\\\underbrace{2s_i}_{k} \\\\cdot \\\\underbrace{s_j}_{x_j}\\n<\/script>\\n</p>\\n<p>注意到对于给定 <script type=\\"math/tex\\">i<\/script>，k是固定的，而之前每个 <script type=\\"math/tex\\">j<\/script> 代表一个点 <script type=\\"math/tex\\">(x_j, y_j)<\/script>，最小化截距 <script type=\\"math/tex\\">b<\/script> 就是最优解。画个图模拟一下可知这是一个下凸包。于是找到最近的那个点 <script type=\\"math/tex\\">j_0<\/script> 进行转移得到 <script type=\\"math/tex\\">f[i]<\/script>（通常是二分），并计算出 <script type=\\"math/tex\\">(x_i, y_i)<\/script> 并加入凸包即可。而对于此题，由于 <script type=\\"math/tex\\">s_i<\/script> 是单调递增的，可以证明如果某个点在 <script type=\\"math/tex\\">j_0<\/script> 左边，即 <script type=\\"math/tex\\">x < x_{j_0}<\/script>，我们维护凸包时不考虑它也可以保证正确性。故可用单调队列 <script type=\\"math/tex\\">O(n)<\/script> 维护。</p>\\n<p>注意判断斜率的时候交叉相乘会爆 long long，用除法即可</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;bits/stdc++.h&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">using</span> <span class=\\"n\\">ll</span> <span class=\\"o\\">=</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">N</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">5e4</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span>\\n<span class=\\"n\\">ll</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">c</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Point</span> <span class=\\"p\\">{</span> <span class=\\"n\\">ll</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span> <span class=\\"p\\">};</span>\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Item</span> <span class=\\"p\\">{</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">Point</span> <span class=\\"n\\">p</span><span class=\\"p\\">;</span> <span class=\\"p\\">};</span>\\n\\n<span class=\\"n\\">Point</span> <span class=\\"nf\\">get_point</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"mi\\">2</span><span class=\\"o\\">*</span><span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">],</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span><span class=\\"o\\">*</span><span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"mi\\">2</span><span class=\\"o\\">*</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">*</span><span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">*</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">)};</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kt\\">double</span> <span class=\\"nf\\">slope</span><span class=\\"p\\">(</span><span class=\\"n\\">Point</span> <span class=\\"n\\">p1</span><span class=\\"p\\">,</span> <span class=\\"n\\">Point</span> <span class=\\"n\\">p2</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">return</span> <span class=\\"p\\">(</span><span class=\\"kt\\">double</span><span class=\\"p\\">)(</span><span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">y</span> <span class=\\"o\\">-</span> <span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">y</span><span class=\\"p\\">)</span> <span class=\\"o\\">/</span> <span class=\\"p\\">(</span><span class=\\"n\\">p2</span><span class=\\"p\\">.</span><span class=\\"n\\">x</span> <span class=\\"o\\">-</span> <span class=\\"n\\">p1</span><span class=\\"p\\">.</span><span class=\\"n\\">x</span><span class=\\"p\\">);</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">cin</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">n</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">l</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">cin</span> <span class=\\"o\\">&gt;&gt;</span> <span class=\\"n\\">c</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">],</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">c</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">+=</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span>\\n\\n  <span class=\\"k\\">static</span> <span class=\\"n\\">Item</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">qr</span> <span class=\\"o\\">++</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">get_point</span><span class=\\"p\\">(</span><span class=\\"mi\\">0</span><span class=\\"p\\">)};</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qr</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">slope</span><span class=\\"p\\">(</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">].</span><span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">].</span><span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">])</span>\\n      <span class=\\"n\\">ql</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">].</span><span class=\\"n\\">p</span><span class=\\"p\\">.</span><span class=\\"n\\">y</span> <span class=\\"o\\">-</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">*</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">].</span><span class=\\"n\\">p</span><span class=\\"p\\">.</span><span class=\\"n\\">x</span> <span class=\\"o\\">+</span> <span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span><span class=\\"o\\">*</span><span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">-</span> <span class=\\"mi\\">2</span><span class=\\"o\\">*</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">*</span><span class=\\"n\\">s</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"k\\">auto</span> <span class=\\"n\\">p</span> <span class=\\"o\\">=</span> <span class=\\"n\\">get_point</span><span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qr</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">slope</span><span class=\\"p\\">(</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">qr</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">].</span><span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">slope</span><span class=\\"p\\">(</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">qr</span><span class=\\"o\\">-</span><span class=\\"mi\\">2</span><span class=\\"p\\">].</span><span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">))</span>\\n      <span class=\\"n\\">qr</span> <span class=\\"o\\">--</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">qr</span><span class=\\"o\\">++</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"n\\">i</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">};</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"n\\">cout</span> <span class=\\"o\\">&lt;&lt;</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">n</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"dp","url":"/tags/dp"}],"title":"HNOI-2008 玩具装箱","updated_at":"2020-10-17T10:05:41+08:00","url":"/docs/dp/dp-optimization/luogu-3195"}')}}]);
//# sourceMappingURL=chunk-2d0df425.10036a42.js.map