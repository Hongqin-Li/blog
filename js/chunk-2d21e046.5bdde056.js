(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21e046"],{d488:function(s){s.exports=JSON.parse('{"created_at":"2022-01-26T22:45:21+08:00","excerpt":"lxhgww 最近收到了一个 $01$ 序列，序列里面包含了 $n$ 个数，下标从 $0$ 开始。这些数要么是 $0$，要么是 $1$，现在对于这个序列有五种变换操作和询问操作：","html":"<p>lxhgww 最近收到了一个 <script type=\\"math/tex\\">01<\/script> 序列，序列里面包含了 <script type=\\"math/tex\\">n<\/script> 个数，下标从 <script type=\\"math/tex\\">0<\/script> 开始。这些数要么是 <script type=\\"math/tex\\">0<\/script>，要么是 <script type=\\"math/tex\\">1<\/script>，现在对于这个序列有五种变换操作和询问操作：</p>\\n<ul>\\n<li><code>0 l r</code> 把 <script type=\\"math/tex\\">[l, r]<\/script> 区间内的所有数全变成 <script type=\\"math/tex\\">0<\/script>\\n</li>\\n<li><code>1 l r</code> 把 <script type=\\"math/tex\\">[l, r]<\/script> 区间内的所有数全变成 <script type=\\"math/tex\\">1<\/script>\\n</li>\\n<li><code>2 l r</code> 把 <script type=\\"math/tex\\">[l,r]<\/script> 区间内的所有数全部取反，也就是说把所有的 <script type=\\"math/tex\\">0<\/script> 变成 <script type=\\"math/tex\\">1<\/script>，把所有的 <script type=\\"math/tex\\">1<\/script> 变成 <script type=\\"math/tex\\">0<\/script>\\n</li>\\n<li><code>3 l r</code> 询问 <script type=\\"math/tex\\">[l, r]<\/script> 区间内总共有多少个 <script type=\\"math/tex\\">1<\/script>\\n</li>\\n<li><code>4 l r</code> 询问 <script type=\\"math/tex\\">[l, r]<\/script> 区间内最多有多少个连续的 <script type=\\"math/tex\\">1<\/script>\\n</li>\\n</ul>\\n<p>对于每一种询问操作，lxhgww 都需要给出回答，聪明的程序员们，你们能帮助他吗？</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行两个正整数 <script type=\\"math/tex\\">n, m (1 \\\\le n, m \\\\le 10^{5})<\/script>，表示序列长度与操作个数。</p>\\n<p>第二行包括 <script type=\\"math/tex\\">n<\/script> 个数，表示序列的初始状态。</p>\\n<p>接下来 <script type=\\"math/tex\\">m<\/script> 行，每行三个整数，表示一次操作。</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>对于每一个询问操作，输出一行一个数，表示其对应的答案。</p>\\n<h2 id=\\"sample-input\\">Sample Input</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>10 10\\n0 0 0 1 1 0 1 0 1 1\\n1 0 2\\n3 0 5\\n2 2 2\\n4 0 4\\n0 3 6\\n2 3 7\\n4 2 8\\n1 0 5\\n0 5 6\\n3 3 9\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"sample-output\\">Sample Output</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>5\\n2\\n6\\n5\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>线段树的维护比较斯巴达，我的做法是维护区间从左/右端点开始连续最长ll和rl，区间内部最长连续ml，区间内的含0/1个数cnt。对于这些信息都开成大小为2的数组，这样可以一起维护0/1，实现起来比较方便。</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>  1\\n  2\\n  3\\n  4\\n  5\\n  6\\n  7\\n  8\\n  9\\n 10\\n 11\\n 12\\n 13\\n 14\\n 15\\n 16\\n 17\\n 18\\n 19\\n 20\\n 21\\n 22\\n 23\\n 24\\n 25\\n 26\\n 27\\n 28\\n 29\\n 30\\n 31\\n 32\\n 33\\n 34\\n 35\\n 36\\n 37\\n 38\\n 39\\n 40\\n 41\\n 42\\n 43\\n 44\\n 45\\n 46\\n 47\\n 48\\n 49\\n 50\\n 51\\n 52\\n 53\\n 54\\n 55\\n 56\\n 57\\n 58\\n 59\\n 60\\n 61\\n 62\\n 63\\n 64\\n 65\\n 66\\n 67\\n 68\\n 69\\n 70\\n 71\\n 72\\n 73\\n 74\\n 75\\n 76\\n 77\\n 78\\n 79\\n 80\\n 81\\n 82\\n 83\\n 84\\n 85\\n 86\\n 87\\n 88\\n 89\\n 90\\n 91\\n 92\\n 93\\n 94\\n 95\\n 96\\n 97\\n 98\\n 99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;cstdio&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;algorithm&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">MAXN</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">1e5</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Node</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">],</span> <span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">],</span> <span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">],</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">tag</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">,</span> <span class=\\"n\\">qx</span><span class=\\"p\\">,</span> <span class=\\"n\\">qa</span><span class=\\"p\\">;</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">];</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">left</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"n\\">i</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">;}</span>\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">right</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">;}</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">update</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">x</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">x</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">2</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]);</span>\\n    <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]);</span>\\n    <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]);</span>\\n    <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]);</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">0</span> <span class=\\"o\\">?</span> <span class=\\"mi\\">1</span><span class=\\"o\\">:</span>\\n                  <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">1</span> <span class=\\"o\\">?</span> <span class=\\"mi\\">0</span><span class=\\"o\\">:</span> <span class=\\"p\\">(</span><span class=\\"mi\\">5</span><span class=\\"o\\">-</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">=</span> <span class=\\"n\\">x</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">nx</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"o\\">-</span><span class=\\"n\\">x</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"o\\">-</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">=</span> <span class=\\"n\\">x</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">=</span> <span class=\\"n\\">x</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">rc</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">tag</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">!=</span> <span class=\\"mi\\">3</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">pushup</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">rc</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">llen</span> <span class=\\"o\\">=</span> <span class=\\"n\\">m</span><span class=\\"o\\">-</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">rlen</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"o\\">-</span><span class=\\"n\\">m</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"mi\\">2</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">],</span>\\n                        <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]));</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">llen</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">rlen</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">build</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">==</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">x</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"p\\">],</span> <span class=\\"n\\">nx</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"o\\">-</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">nx</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushup</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">modify</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">qx</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushup</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">query_cnt</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"k\\">return</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">return</span> <span class=\\"n\\">query_cnt</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">)</span> <span class=\\"o\\">+</span> <span class=\\"n\\">query_cnt</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"n\\">pair</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">query_seq</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">qa</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">qa</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ml</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">],</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">])));</span>\\n    <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">ll</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">rl</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]};</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">pair</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">lres</span> <span class=\\"o\\">=</span> <span class=\\"n\\">query_seq</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">rres</span> <span class=\\"o\\">=</span> <span class=\\"n\\">query_seq</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">qml</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">l</span><span class=\\"p\\">),</span> <span class=\\"n\\">qmr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">min</span><span class=\\"p\\">(</span><span class=\\"n\\">qr</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">),</span> <span class=\\"n\\">ll</span><span class=\\"p\\">,</span> <span class=\\"n\\">rl</span><span class=\\"p\\">;</span>\\n\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">qml</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">m</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">ll</span> <span class=\\"o\\">=</span> <span class=\\"n\\">lres</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span> <span class=\\"o\\">==</span> <span class=\\"n\\">m</span><span class=\\"o\\">-</span><span class=\\"n\\">qml</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span> <span class=\\"o\\">?</span> <span class=\\"n\\">lres</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span> <span class=\\"o\\">+</span> <span class=\\"n\\">rres</span><span class=\\"p\\">.</span><span class=\\"nl\\">first</span><span class=\\"p\\">:</span> <span class=\\"n\\">lres</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">ll</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rres</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">;</span>\\n\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">qmr</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">m</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">rl</span> <span class=\\"o\\">=</span> <span class=\\"n\\">rres</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span> <span class=\\"o\\">==</span> <span class=\\"n\\">qmr</span><span class=\\"o\\">-</span><span class=\\"n\\">m</span> <span class=\\"o\\">?</span> <span class=\\"n\\">lres</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span> <span class=\\"o\\">+</span> <span class=\\"n\\">rres</span><span class=\\"p\\">.</span><span class=\\"nl\\">second</span><span class=\\"p\\">:</span> <span class=\\"n\\">rres</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">rl</span> <span class=\\"o\\">=</span> <span class=\\"n\\">lres</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">;</span>\\n\\n    <span class=\\"n\\">qa</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">qa</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">lres</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span> <span class=\\"o\\">+</span> <span class=\\"n\\">rres</span><span class=\\"p\\">.</span><span class=\\"n\\">first</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">ll</span><span class=\\"p\\">,</span> <span class=\\"n\\">rl</span><span class=\\"p\\">)));</span>\\n    <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"n\\">ll</span><span class=\\"p\\">,</span> <span class=\\"n\\">rl</span><span class=\\"p\\">};</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"p\\">{</span><span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">};</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">m</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"o\\">+</span><span class=\\"n\\">i</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">--</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">qx</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">qr</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">ql</span> <span class=\\"o\\">++</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">qx</span> <span class=\\"o\\">&lt;=</span> <span class=\\"mi\\">2</span><span class=\\"p\\">)</span> <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">else</span> <span class=\\"nf\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">qx</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">3</span><span class=\\"p\\">)</span> <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">query_cnt</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">));</span>\\n    <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">qa</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n      <span class=\\"n\\">query_seq</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">qa</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"data structures","url":"/tags/data-structures"}],"title":"SCOI-2010 序列操作","updated_at":"2022-01-26T22:45:21+08:00","url":"/docs/data-structures/segment-tree/luogu-2572"}')}}]);
//# sourceMappingURL=chunk-2d21e046.5bdde056.js.map