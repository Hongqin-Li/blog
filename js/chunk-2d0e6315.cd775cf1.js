(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e6315"],{9866:function(s){s.exports=JSON.parse('{"created_at":"2022-01-26T22:47:05+08:00","excerpt":"在一年前赢得了小镇的最佳草坪比赛后，Farm John变得很懒，再也没有修剪过草坪。现在，新一轮的最佳草坪比赛又开始了，Farm John希望能够再次夺冠。","html":"<p>在一年前赢得了小镇的最佳草坪比赛后，Farm John变得很懒，再也没有修剪过草坪。现在，新一轮的最佳草坪比赛又开始了，Farm John希望能够再次夺冠。</p>\\n<p>然而，Farm John的草坪非常脏乱，因此，Farm John只能够让他的奶牛来完成这项工作。Farm John有 <script type=\\"math/tex\\">N(1 \\\\le N \\\\le 100,000)<\/script> 只排成一排的奶牛，编号为 <script type=\\"math/tex\\">1\\\\dots N<\/script>。每只奶牛的效率是不同的，奶牛 <script type=\\"math/tex\\">i<\/script> 的效率为 <script type=\\"math/tex\\">E_i(0 \\\\le E_i \\\\le 1,000,000,000)<\/script>。</p>\\n<p>靠近的奶牛们很熟悉，因此，如果Farm John安排超过 <script type=\\"math/tex\\">K<\/script> 只连续的奶牛，那么，这些奶牛就会罢工去开派对:)。因此，现在Farm John需要你的帮助，计算FJ可以得到的最大效率，并且该方案中没有连续的超过 <script type=\\"math/tex\\">K<\/script> 只奶牛。</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行：空格隔开的两个整数 <script type=\\"math/tex\\">N<\/script> 和 <script type=\\"math/tex\\">K<\/script>\\n</p>\\n<p>第二到 <script type=\\"math/tex\\">N+1<\/script> 行：第 <script type=\\"math/tex\\">i+1<\/script> 行有一个整数 <script type=\\"math/tex\\">E_i<\/script>\\n</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>第一行：一个值，表示 Farm John 可以得到的最大的效率值。</p>\\n<h2 id=\\"examples\\">Examples</h2>\\n<p>Input 1:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5\\n6</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>5 2\\n1\\n2\\n3\\n4\\n5\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output 1:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>12\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Input 2:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5\\n6</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>5 3\\n3\\n2\\n1\\n10\\n10\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output 2:</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>25\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>单调队列模板题，<script type=\\"math/tex\\">f[i][0], f[i][1]<\/script> 分别表示前i头奶牛中选了第 <script type=\\"math/tex\\">i<\/script> 头和没选第 <script type=\\"math/tex\\">i<\/script> 头的最大和</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;bits/stdc++.h&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">typedef</span> <span class=\\"kt\\">long</span> <span class=\\"kt\\">long</span> <span class=\\"n\\">ll</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">N</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">1e5</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n<span class=\\"n\\">ll</span> <span class=\\"n\\">sa</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">][</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n<span class=\\"n\\">pair</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"n\\">ll</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">k</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">k</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"o\\">+</span><span class=\\"n\\">i</span><span class=\\"p\\">),</span>\\n    <span class=\\"n\\">sa</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">sa</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n\\n  <span class=\\"n\\">ll</span> <span class=\\"n\\">d</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">j</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">for</span> <span class=\\"p\\">(;</span> <span class=\\"n\\">j</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">j</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">pair</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"p\\">,</span> <span class=\\"n\\">ll</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">t</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"n\\">j</span><span class=\\"p\\">,</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">j</span><span class=\\"p\\">][</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">sa</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">-</span> <span class=\\"n\\">sa</span><span class=\\"p\\">[</span><span class=\\"n\\">j</span><span class=\\"p\\">]</span> <span class=\\"o\\">-</span> <span class=\\"n\\">d</span><span class=\\"p\\">};</span>\\n      <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">].</span><span class=\\"n\\">first</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">-</span> <span class=\\"n\\">k</span><span class=\\"p\\">)</span> <span class=\\"n\\">ql</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n      <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">qr</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">].</span><span class=\\"n\\">second</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">t</span><span class=\\"p\\">.</span><span class=\\"n\\">second</span><span class=\\"p\\">)</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">--</span><span class=\\"p\\">;</span>\\n      <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">qr</span> <span class=\\"o\\">++</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">t</span><span class=\\"p\\">;</span>\\n    <span class=\\"p\\">}</span>\\n\\n    <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">][</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">][</span><span class=\\"mi\\">1</span><span class=\\"p\\">],</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">][</span><span class=\\"mi\\">0</span><span class=\\"p\\">]);</span>\\n    <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">][</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">].</span><span class=\\"n\\">second</span> <span class=\\"o\\">+</span> <span class=\\"n\\">d</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">d</span> <span class=\\"o\\">+=</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">];</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%lld&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">n</span><span class=\\"p\\">][</span><span class=\\"mi\\">0</span><span class=\\"p\\">],</span> <span class=\\"n\\">f</span><span class=\\"p\\">[</span><span class=\\"n\\">n</span><span class=\\"p\\">][</span><span class=\\"mi\\">1</span><span class=\\"p\\">]));</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"dp","url":"/tags/dp"}],"title":"洛谷P2627 [USACO11OPEN]Mowing the Lawn G","updated_at":"2022-01-26T22:47:05+08:00","url":"/docs/dp/dp-optimization/luogu-2627"}')}}]);
//# sourceMappingURL=chunk-2d0e6315.cd775cf1.js.map