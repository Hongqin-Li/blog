(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0aacd6"],{1320:function(s){s.exports=JSON.parse('{"created_at":"2022-01-19T23:40:55+08:00","excerpt":"Ray 乐忠于旅游，这次他来到了 T 城。T 城是一个水上城市，一共有 $n$ 个景点，有些景点之间会用一座桥连接。为了方便游客到达每个景点但又为了节约成本，T 城的任意两个景点之间有且只有一条路径。换句话说， T 城中只有 $n-1$ 座桥。","html":"<p>Ray 乐忠于旅游，这次他来到了 T 城。T 城是一个水上城市，一共有 <script type=\\"math/tex\\">n<\/script> 个景点，有些景点之间会用一座桥连接。为了方便游客到达每个景点但又为了节约成本，T 城的任意两个景点之间有且只有一条路径。换句话说， T 城中只有 <script type=\\"math/tex\\">n-1<\/script> 座桥。</p>\\n<p>Ray 发现，有些桥上可以看到美丽的景色，让人心情愉悦，但有些桥狭窄泥泞，令人烦躁。于是，他给每座桥定义一个愉悦度 <script type=\\"math/tex\\">w<\/script>，也就是说，Ray 经过这座桥会增加 <script type=\\"math/tex\\">w<\/script> 的愉悦度，这或许是正的也可能是负的。有时，Ray 看待同一座桥的心情也会发生改变。</p>\\n<p>现在，Ray 想让你帮他计算从 <script type=\\"math/tex\\">u<\/script> 景点到 <script type=\\"math/tex\\">v<\/script> 景点能获得的总愉悦度。有时，他还想知道某段路上最美丽的桥所提供的最大愉悦度，或是某段路上最糟糕的一座桥提供的最低愉悦度。\\n题目描述</p>\\n<p>给定一棵 <script type=\\"math/tex\\">n<\/script> 个节点的树，边带权，编号 <script type=\\"math/tex\\">0 \\\\sim n-1<\/script>，需要支持五种操作：</p>\\n<ul>\\n<li><code>C i w</code> 将输入的第 <script type=\\"math/tex\\">i<\/script> 条边权值改为 <script type=\\"math/tex\\">w<\/script>\\n</li>\\n<li><code>N u v</code> 将 <script type=\\"math/tex\\">u, v<\/script> 节点之间的边权都变为相反数</li>\\n<li><code>SUM u v</code> 询问 <script type=\\"math/tex\\">u, v<\/script> 节点之间边权和</li>\\n<li><code>MAX u v</code> 询问 <script type=\\"math/tex\\">u, v<\/script> 节点之间边权最大值</li>\\n<li><code>MIN u v</code> 询问 <script type=\\"math/tex\\">u, v<\/script> 节点之间边权最小值</li>\\n</ul>\\n<p>保证任意时刻所有边的权值都在 <script type=\\"math/tex\\">[-1000,1000]<\/script> 内。</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行一个正整数 <script type=\\"math/tex\\">n<\/script>，表示节点个数。\\n接下来 <script type=\\"math/tex\\">n-1<\/script> 行，每行三个整数 <script type=\\"math/tex\\">u,v,w<\/script>，表示 <script type=\\"math/tex\\">u,v<\/script> 之间有一条权值为 <script type=\\"math/tex\\">w<\/script> 的边，描述这棵树。\\n然后一行一个正整数 <script type=\\"math/tex\\">m<\/script>，表示操作数。\\n接下来 <script type=\\"math/tex\\">m<\/script> 行，每行表示一个操作。</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>对于每一个询问操作，输出一行一个整数表示答案。</p>\\n<h2 id=\\"sample-input\\">Sample Input</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>8\\n0 1 10\\n1 2 -3\\n1 3 7\\n2 4 -4\\n2 5 6\\n5 6 -9\\n5 7 2\\n\\n13\\nMIN 1 0\\nSUM 0 7\\nMIN 1 6\\nN 4 3\\nMIN 3 7\\nC 2 11\\nSUM 3 6\\nMAX 0 2\\nSUM 4 6\\nMIN 4 6\\nN 0 7\\nSUM 3 4\\nSUM 3 6\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"sample-output\\">Sample Output</h2>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>10\\n15\\n-9\\n-7\\n1\\n11\\n1\\n-9\\n-14\\n-33\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>边权下放至点权，并用线段树维护最小值、最大值和区间和，其他的就是树链剖分+线段树模板了。可以用来练手，代码量比较大，<del>是时候骚一波泛型模板了</del>。</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>  1\\n  2\\n  3\\n  4\\n  5\\n  6\\n  7\\n  8\\n  9\\n 10\\n 11\\n 12\\n 13\\n 14\\n 15\\n 16\\n 17\\n 18\\n 19\\n 20\\n 21\\n 22\\n 23\\n 24\\n 25\\n 26\\n 27\\n 28\\n 29\\n 30\\n 31\\n 32\\n 33\\n 34\\n 35\\n 36\\n 37\\n 38\\n 39\\n 40\\n 41\\n 42\\n 43\\n 44\\n 45\\n 46\\n 47\\n 48\\n 49\\n 50\\n 51\\n 52\\n 53\\n 54\\n 55\\n 56\\n 57\\n 58\\n 59\\n 60\\n 61\\n 62\\n 63\\n 64\\n 65\\n 66\\n 67\\n 68\\n 69\\n 70\\n 71\\n 72\\n 73\\n 74\\n 75\\n 76\\n 77\\n 78\\n 79\\n 80\\n 81\\n 82\\n 83\\n 84\\n 85\\n 86\\n 87\\n 88\\n 89\\n 90\\n 91\\n 92\\n 93\\n 94\\n 95\\n 96\\n 97\\n 98\\n 99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;cstdio&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;cassert&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;algorithm&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">INF</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">1e9</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">MAXN</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">2e5</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n<span class=\\"k\\">enum</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">OP_SUM</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">OP_MAX</span><span class=\\"p\\">,</span> <span class=\\"n\\">OP_MIN</span><span class=\\"p\\">,</span> \\n  <span class=\\"n\\">OP_CHANGE</span><span class=\\"p\\">,</span> <span class=\\"n\\">OP_NEG</span><span class=\\"p\\">,</span>\\n<span class=\\"p\\">};</span>\\n\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">sum</span><span class=\\"p\\">(</span><span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">a</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">b</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"n\\">a</span> <span class=\\"o\\">+</span> <span class=\\"n\\">b</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span>\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">min1</span><span class=\\"p\\">(</span><span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">a</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">b</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"n\\">a</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">b</span> <span class=\\"o\\">?</span> <span class=\\"nl\\">a</span><span class=\\"p\\">:</span> <span class=\\"n\\">b</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span>\\n<span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">max1</span><span class=\\"p\\">(</span><span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">a</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">b</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"n\\">a</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">b</span> <span class=\\"o\\">?</span> <span class=\\"nl\\">a</span><span class=\\"p\\">:</span> <span class=\\"n\\">b</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">ni</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">nedges</span><span class=\\"p\\">,</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">];</span>\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Edge</span> <span class=\\"p\\">{</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">to</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"p\\">,</span> <span class=\\"n\\">nxt</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"o\\">*</span><span class=\\"mi\\">2</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">addedge</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">w</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"o\\">++</span><span class=\\"n\\">nedges</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"p\\">,</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]};</span>\\n  <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">nedges</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">SegmentTree</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">struct</span> <span class=\\"n\\">Node</span> <span class=\\"p\\">{</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">t</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">3</span><span class=\\"p\\">];</span> <span class=\\"p\\">}</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"o\\">*</span><span class=\\"mi\\">4</span><span class=\\"p\\">];</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">,</span> <span class=\\"n\\">qop</span><span class=\\"p\\">,</span> <span class=\\"n\\">qx</span><span class=\\"p\\">;</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">left</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;&lt;</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;}</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"nf\\">right</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">)</span>  <span class=\\"p\\">{</span> <span class=\\"k\\">return</span> <span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"o\\">&lt;&lt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span>\\n\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">update</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">mi</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">],</span> <span class=\\"n\\">ma</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"o\\">-</span><span class=\\"n\\">ma</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"o\\">-</span><span class=\\"n\\">mi</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"o\\">-</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">];</span> \\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">t</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">^=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">t</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span>  <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">rc</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">t</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">t</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n      <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">x</span><span class=\\"p\\">)</span> <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">pushup</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span>  <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">rc</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">+</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">];</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]);</span>\\n    <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">min</span><span class=\\"p\\">(</span><span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">lc</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">],</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">rc</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">]);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"kt\\">void</span> <span class=\\"nf\\">build</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">==</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"p\\">];</span>\\n    <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n      <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">pushup</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"kt\\">void</span> <span class=\\"nf\\">modify</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">qop</span> <span class=\\"o\\">==</span> <span class=\\"n\\">OP_NEG</span><span class=\\"p\\">)</span> <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n      <span class=\\"k\\">else</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"mi\\">2</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">qx</span><span class=\\"p\\">;</span>\\n    <span class=\\"p\\">}</span>\\n    <span class=\\"k\\">else</span> <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">pushup</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">flip</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">qop</span> <span class=\\"o\\">=</span> <span class=\\"n\\">OP_NEG</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">void</span> <span class=\\"nf\\">change</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">x</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">i</span><span class=\\"p\\">,</span> <span class=\\"n\\">qop</span> <span class=\\"o\\">=</span> <span class=\\"n\\">OP_CHANGE</span><span class=\\"p\\">,</span> <span class=\\"n\\">qx</span> <span class=\\"o\\">=</span> <span class=\\"n\\">x</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">modify</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">template</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span> <span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"p\\">(</span><span class=\\"o\\">*</span><span class=\\"n\\">F</span><span class=\\"p\\">)(</span><span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">)</span><span class=\\"o\\">&gt;</span>\\n  <span class=\\"kr\\">inline</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">op</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">qop</span> <span class=\\"o\\">=</span> <span class=\\"n\\">op</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">return</span> <span class=\\"n\\">queryx</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"n\\">F</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">template</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span> <span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"p\\">(</span><span class=\\"o\\">*</span><span class=\\"n\\">F</span><span class=\\"p\\">)(</span><span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">)</span><span class=\\"o\\">&gt;</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">queryx</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">p</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">l</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"k\\">return</span> <span class=\\"n\\">node</span><span class=\\"p\\">[</span><span class=\\"n\\">p</span><span class=\\"p\\">].</span><span class=\\"n\\">v</span><span class=\\"p\\">[</span><span class=\\"n\\">qop</span><span class=\\"p\\">];</span>\\n    <span class=\\"k\\">else</span> <span class=\\"nf\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">r</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">&gt;=</span> <span class=\\"n\\">l</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"o\\">+</span><span class=\\"n\\">r</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"mi\\">2</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">left</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">),</span> <span class=\\"n\\">rc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">right</span><span class=\\"p\\">(</span><span class=\\"n\\">p</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">pushdown</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">p</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">);</span>\\n      <span class=\\"k\\">return</span> <span class=\\"n\\">F</span><span class=\\"p\\">(</span><span class=\\"n\\">queryx</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"n\\">F</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">lc</span><span class=\\"p\\">),</span> <span class=\\"n\\">queryx</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"n\\">F</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rc</span><span class=\\"p\\">));</span>\\n    <span class=\\"p\\">}</span>\\n    <span class=\\"k\\">return</span> <span class=\\"n\\">I</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span> <span class=\\"n\\">smt</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">hson</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">MAXN</span><span class=\\"p\\">],</span> <span class=\\"n\\">rcnt</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">dfs1</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">r</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">hson</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">],</span> <span class=\\"n\\">maxs</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">nxt</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">to</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">v</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">dfs1</span><span class=\\"p\\">(</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">u</span><span class=\\"p\\">);</span>\\n      <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">w</span><span class=\\"p\\">,</span>\\n      <span class=\\"n\\">ni</span><span class=\\"p\\">[(</span><span class=\\"n\\">i</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">&gt;&gt;</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">v</span><span class=\\"p\\">;</span>\\n      <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">maxs</span><span class=\\"p\\">)</span> <span class=\\"n\\">maxs</span> <span class=\\"o\\">=</span> <span class=\\"n\\">sz</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">],</span> <span class=\\"n\\">hson</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">v</span><span class=\\"p\\">;</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">r</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"o\\">++</span><span class=\\"n\\">rcnt</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">hson</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">])</span> <span class=\\"n\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"n\\">hson</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">],</span> <span class=\\"n\\">r</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">head</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">];</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">nxt</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span> <span class=\\"o\\">=</span> <span class=\\"n\\">edge</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">to</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">v</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">hson</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">v</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">])</span> <span class=\\"n\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"k\\">template</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span> <span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"p\\">(</span><span class=\\"o\\">*</span><span class=\\"n\\">F</span><span class=\\"p\\">)(</span><span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">,</span> <span class=\\"k\\">const</span> <span class=\\"kt\\">int</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">)</span><span class=\\"o\\">&gt;</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">query</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">op</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">ans</span> <span class=\\"o\\">=</span> <span class=\\"n\\">I</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(;</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">];</span> <span class=\\"n\\">u</span> <span class=\\"o\\">=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]])</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]])</span> <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">res</span> <span class=\\"o\\">=</span> <span class=\\"n\\">smt</span><span class=\\"p\\">.</span><span class=\\"n\\">query</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"n\\">F</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]],</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">],</span> <span class=\\"n\\">op</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">ans</span> <span class=\\"o\\">=</span> <span class=\\"n\\">F</span><span class=\\"p\\">(</span><span class=\\"n\\">ans</span><span class=\\"p\\">,</span> <span class=\\"n\\">res</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">u</span> <span class=\\"o\\">==</span> <span class=\\"n\\">v</span><span class=\\"p\\">)</span> <span class=\\"k\\">return</span> <span class=\\"n\\">ans</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">])</span> <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">return</span> <span class=\\"nf\\">F</span><span class=\\"p\\">(</span><span class=\\"n\\">ans</span><span class=\\"p\\">,</span> <span class=\\"n\\">smt</span><span class=\\"p\\">.</span><span class=\\"n\\">query</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">I</span><span class=\\"p\\">,</span> <span class=\\"n\\">F</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">],</span> <span class=\\"n\\">op</span><span class=\\"p\\">));</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kt\\">void</span> <span class=\\"n\\">flip</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">v</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(;</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">];</span> <span class=\\"n\\">u</span> <span class=\\"o\\">=</span> <span class=\\"n\\">fa</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]])</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">dep</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]])</span> <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">smt</span><span class=\\"p\\">.</span><span class=\\"n\\">flip</span><span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">top</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]],</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">u</span> <span class=\\"o\\">==</span> <span class=\\"n\\">v</span><span class=\\"p\\">)</span> <span class=\\"k\\">return</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">])</span> <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">smt</span><span class=\\"p\\">.</span><span class=\\"n\\">flip</span><span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">u</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">v</span><span class=\\"p\\">]);</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">w</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">u</span><span class=\\"o\\">++</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n    <span class=\\"n\\">addedge</span><span class=\\"p\\">(</span><span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">addedge</span><span class=\\"p\\">(</span><span class=\\"n\\">v</span><span class=\\"p\\">,</span> <span class=\\"n\\">u</span><span class=\\"p\\">,</span> <span class=\\"n\\">w</span><span class=\\"p\\">);</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"n\\">dfs1</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">),</span> <span class=\\"n\\">dfs2</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">w</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n  <span class=\\"n\\">smt</span><span class=\\"p\\">.</span><span class=\\"n\\">build</span><span class=\\"p\\">(</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span>\\n  <span class=\\"kt\\">char</span> <span class=\\"n\\">op</span><span class=\\"p\\">[</span><span class=\\"mi\\">10</span><span class=\\"p\\">];</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">m</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">m</span><span class=\\"o\\">--</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%s%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">op</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">==</span> <span class=\\"sc\\">&#39;C&#39;</span><span class=\\"p\\">)</span> <span class=\\"n\\">smt</span><span class=\\"p\\">.</span><span class=\\"n\\">change</span><span class=\\"p\\">(</span><span class=\\"n\\">rnk</span><span class=\\"p\\">[</span><span class=\\"n\\">ni</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]],</span> <span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">else</span> <span class=\\"nf\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">==</span> <span class=\\"sc\\">&#39;N&#39;</span><span class=\\"p\\">)</span> <span class=\\"n\\">flip</span><span class=\\"p\\">(</span><span class=\\"n\\">x</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">else</span> <span class=\\"nf\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span><span class=\\"p\\">[</span><span class=\\"mi\\">0</span><span class=\\"p\\">]</span> <span class=\\"o\\">==</span> <span class=\\"sc\\">&#39;S&#39;</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">query</span><span class=\\"o\\">&lt;</span><span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">sum</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">x</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">OP_SUM</span><span class=\\"p\\">));</span>\\n    <span class=\\"k\\">else</span> <span class=\\"nf\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span><span class=\\"p\\">[</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">==</span> <span class=\\"sc\\">&#39;A&#39;</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">query</span><span class=\\"o\\">&lt;-</span><span class=\\"n\\">INF</span><span class=\\"p\\">,</span> <span class=\\"n\\">max1</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">x</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">OP_MAX</span><span class=\\"p\\">));</span>\\n    <span class=\\"k\\">else</span>\\n      <span class=\\"nf\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">query</span><span class=\\"o\\">&lt;</span><span class=\\"n\\">INF</span><span class=\\"p\\">,</span> <span class=\\"n\\">min1</span><span class=\\"o\\">&gt;</span><span class=\\"p\\">(</span><span class=\\"n\\">x</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">OP_MIN</span><span class=\\"p\\">));</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"data structures","url":"/tags/data-structures"}],"title":"洛谷-P1505 [国家集训队]旅游","updated_at":"2022-01-19T23:40:55+08:00","url":"/docs/data-structures/segment-tree/luogu-1505"}')}}]);
//# sourceMappingURL=chunk-2d0aacd6.c9122af1.js.map