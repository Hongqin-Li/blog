(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22d9b5"],{f7e3:function(s){s.exports=JSON.parse('{"created_at":"2022-01-26T22:47:05+08:00","excerpt":"给你一个字符串 $a$，每次询问一段区间的贡献。","html":"<p>给你一个字符串 <script type=\\"math/tex\\">a<\/script>，每次询问一段区间的贡献。</p>\\n<p>贡献定义：</p>\\n<p>每次从这个区间中拿出一个字符 <script type=\\"math/tex\\">x<\/script> ，然后把 <script type=\\"math/tex\\">x<\/script> 从这个区间中删除，直到区间为空。你要维护一个集合 <script type=\\"math/tex\\">S<\/script>。</p>\\n<ul>\\n<li>如果 <script type=\\"math/tex\\">S<\/script> 为空，你 rp 减 <script type=\\"math/tex\\">1<\/script>。</li>\\n<li>如果 <script type=\\"math/tex\\">S<\/script> 中有一个元素不小于 <script type=\\"math/tex\\">x<\/script>，则你 rp 减 <script type=\\"math/tex\\">1<\/script>，清空 <script type=\\"math/tex\\">S<\/script>。</li>\\n<li>之后将 <script type=\\"math/tex\\">x<\/script> 插入 <script type=\\"math/tex\\">S<\/script>。</li>\\n</ul>\\n<p>由于你是大爷，平时做过的题考试都会考到，所以每次询问你搞完这段区间的字符之后最多还有多少 rp？rp 初始为 <script type=\\"math/tex\\">0<\/script>。</p>\\n<p>询问之间不互相影响~</p>\\n<h2 id=\\"input\\">Input</h2>\\n<p>第一行两个整数 <script type=\\"math/tex\\">n<\/script>，<script type=\\"math/tex\\">m<\/script>，表示字符串长度与询问次数。</p>\\n<p>之后一行 <script type=\\"math/tex\\">n<\/script> 个数，第 <script type=\\"math/tex\\">i<\/script> 个整数表示给出的字符串的第 <script type=\\"math/tex\\">i<\/script> 个字符 <script type=\\"math/tex\\">x_i<\/script>。</p>\\n<p>接下来 <script type=\\"math/tex\\">m<\/script> 行，每行两个整数 <script type=\\"math/tex\\">l, r<\/script>，表示一次询问的区间。</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>对于每次询问，输出一行一个整数表示答案。</p>\\n<h2 id=\\"examples\\">Examples</h2>\\n<p>Input</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>10 10\\n88 27 94 27 34 9 9 67 13 25 \\n2 3\\n5 9\\n4 10\\n1 6\\n6 8\\n2 9\\n3 8\\n3 9\\n3 6\\n5 8\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>-1\\n-2\\n-2\\n-2\\n-2\\n-2\\n-2\\n-2\\n-1\\n-2\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p><del>不愧是大爷的题面</del></p>\\n<p>求区间内众数的出现次数，即出现次数的最大值，显然可用回滚莫队。注意排序是左端点所在块编号作为第一关键字，右端点作为第二关键字（右端点不能用块编号）</p>\\n<p>还有普通莫队的方法，记录数的出现次数以及出现次数为 <script type=\\"math/tex\\">x<\/script> 的数有多少个。</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;bits/stdc++.h&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">N</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">2e5</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">aa</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">ans</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span> \\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Q</span> <span class=\\"p\\">{</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">,</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">m</span><span class=\\"p\\">);</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"o\\">+</span><span class=\\"n\\">i</span><span class=\\"p\\">),</span> <span class=\\"n\\">aa</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">r</span><span class=\\"p\\">);</span>\\n    <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">i</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n\\n  <span class=\\"n\\">sort</span><span class=\\"p\\">(</span><span class=\\"n\\">aa</span><span class=\\"p\\">,</span> <span class=\\"n\\">aa</span><span class=\\"o\\">+</span><span class=\\"n\\">n</span><span class=\\"p\\">);</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">an</span> <span class=\\"o\\">=</span> <span class=\\"n\\">unique</span><span class=\\"p\\">(</span><span class=\\"n\\">aa</span><span class=\\"p\\">,</span> <span class=\\"n\\">aa</span><span class=\\"o\\">+</span><span class=\\"n\\">n</span><span class=\\"p\\">)</span> <span class=\\"o\\">-</span> <span class=\\"n\\">aa</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n    <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">lower_bound</span><span class=\\"p\\">(</span><span class=\\"n\\">aa</span><span class=\\"p\\">,</span> <span class=\\"n\\">aa</span><span class=\\"o\\">+</span><span class=\\"n\\">an</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">])</span> <span class=\\"o\\">-</span> <span class=\\"n\\">aa</span><span class=\\"p\\">;</span>\\n\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">bs</span> <span class=\\"o\\">=</span> <span class=\\"n\\">ceil</span><span class=\\"p\\">(</span><span class=\\"n\\">sqrt</span><span class=\\"p\\">(</span><span class=\\"n\\">n</span><span class=\\"p\\">));</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"n\\">bs</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">sort</span><span class=\\"p\\">(</span><span class=\\"n\\">q</span><span class=\\"p\\">,</span> <span class=\\"n\\">q</span><span class=\\"o\\">+</span><span class=\\"n\\">m</span><span class=\\"p\\">,</span> <span class=\\"p\\">[</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">](</span><span class=\\"n\\">Q</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">a</span><span class=\\"p\\">,</span> <span class=\\"n\\">Q</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">b</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">return</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">?</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">:</span> <span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">r</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">r</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">});</span>\\n\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">pre</span> <span class=\\"o\\">=</span> <span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">c</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">r</span><span class=\\"p\\">;</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">end</span> <span class=\\"o\\">=</span> <span class=\\"n\\">min</span><span class=\\"p\\">(</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"p\\">(</span><span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">]</span><span class=\\"o\\">+</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">*</span><span class=\\"n\\">bs</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">pre</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">pre</span> <span class=\\"o\\">=</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">ql</span><span class=\\"p\\">],</span> <span class=\\"n\\">r</span> <span class=\\"o\\">=</span> <span class=\\"n\\">end</span><span class=\\"p\\">,</span> <span class=\\"n\\">c</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n      <span class=\\"n\\">memset</span><span class=\\"p\\">(</span><span class=\\"n\\">cnt</span><span class=\\"p\\">,</span> <span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"k\\">sizeof</span><span class=\\"p\\">(</span><span class=\\"n\\">cnt</span><span class=\\"p\\">));</span>\\n    <span class=\\"p\\">}</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">r</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"n\\">c</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">c</span><span class=\\"p\\">,</span> <span class=\\"o\\">++</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"o\\">++</span><span class=\\"n\\">r</span><span class=\\"p\\">]]);</span>\\n\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">cc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">c</span><span class=\\"p\\">,</span> <span class=\\"n\\">ll</span> <span class=\\"o\\">=</span> <span class=\\"n\\">min</span><span class=\\"p\\">(</span><span class=\\"n\\">end</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">ql</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">ll</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n      <span class=\\"n\\">cc</span> <span class=\\"o\\">=</span> <span class=\\"n\\">max</span><span class=\\"p\\">(</span><span class=\\"n\\">cc</span><span class=\\"p\\">,</span> <span class=\\"o\\">++</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]]);</span>\\n    <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">ql</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">ll</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n      <span class=\\"o\\">--</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]];</span>\\n\\n    <span class=\\"n\\">ans</span><span class=\\"p\\">[</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">cc</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">-</span><span class=\\"n\\">ans</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]);</span>\\n\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"data structures","url":"/tags/data-structures"}],"title":"洛谷-P3709 大爷的字符串题","updated_at":"2022-01-26T22:47:05+08:00","url":"/docs/data-structures/mo/luogu-3709"}')}}]);
//# sourceMappingURL=chunk-2d22d9b5.4c5ceff6.js.map