(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a2d3d"],{"0029":function(s){s.exports=JSON.parse('{"created_at":"2020-10-17T12:00:02+08:00","excerpt":"You come home and fell some unpleasant smell. Where is it coming from?","html":"<p>You come home and fell some unpleasant smell. Where is it coming from?</p>\\n<p>You are given an array <script type=\\"math/tex\\">a<\/script> . You have to answer the following queries:</p>\\n<ul>\\n<li>You are given two integers <script type=\\"math/tex\\">l<\/script> and <script type=\\"math/tex\\">r<\/script> . Let <script type=\\"math/tex\\">c_{i}<\/script> be the number of occurrences of <script type=\\"math/tex\\">i<\/script> in <script type=\\"math/tex\\">a_{l:r}<\/script>, where <script type=\\"math/tex\\">a_{l:r}<\/script> is the subarray of <script type=\\"math/tex\\">a<\/script> from <script type=\\"math/tex\\">l<\/script>-th element to <script type=\\"math/tex\\">r<\/script>-th inclusive. Find the Mex of <script type=\\"math/tex\\">\\\\{c_{0},c_{1},...,c_{10^{9}}\\\\}<\/script>\\n</li>\\n<li>You are given two integers <script type=\\"math/tex\\">p<\/script> to <script type=\\"math/tex\\">x<\/script>. Change <script type=\\"math/tex\\">a_{p}<\/script> to <script type=\\"math/tex\\">x<\/script>.</li>\\n</ul>\\n<p>The Mex of a multiset of numbers is the smallest non-negative integer not in the set.</p>\\n<p>Note that in this problem all elements of <script type=\\"math/tex\\">a<\/script> are positive, which means that <script type=\\"math/tex\\">c_{0} = 0<\/script> and <script type=\\"math/tex\\">0<\/script> is never the answer for the query of the second type.</p>\\n<h1 id=\\"input\\">Input</h1>\\n<p>The first line of input contains two integers <script type=\\"math/tex\\">n<\/script> and <script type=\\"math/tex\\">q(1 \\\\le n,q \\\\le 100000)<\/script> — the length of the array and the number of queries respectively.</p>\\n<p>The second line of input contains <script type=\\"math/tex\\">n<\/script> integers — <script type=\\"math/tex\\">a_{1}, a_{2}, ..., a_{n} (1 \\\\le a_{i} \\\\le 10^{9})<\/script>.</p>\\n<p>Each of the next <script type=\\"math/tex\\">q<\/script> lines describes a single query.</p>\\n<p>The first type of query is described by three integers <script type=\\"math/tex\\">t_{i}=1, l_{i}, r_{i}<\/script>, where <script type=\\"math/tex\\">1 \\\\le l_{i} \\\\le r_{i} \\\\le n<\/script>  the bounds of the subarray.</p>\\n<p>The second type of query is described by three integers <script type=\\"math/tex\\">t_{i}=2, p_{i}, x_{i}<\/script>, where <script type=\\"math/tex\\">1 \\\\le p_i \\\\le n<\/script> is the index of the element, which must be changed and <script type=\\"math/tex\\">1 \\\\le x_{i} \\\\le 10^{9}<\/script> is the new value.</p>\\n<h2 id=\\"output\\">Output</h2>\\n<p>For each query of the first type output a single integer — the Mex of <script type=\\"math/tex\\">\\\\{c_{0},c_{1},...,c_{10^{9}}\\\\}<\/script>.</p>\\n<h2 id=\\"examples\\">Examples</h2>\\n<p>Input</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3\\n4\\n5\\n6</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>10 4\\n1 2 3 1 1 2 2 2 9 9\\n1 1 1\\n1 2 8\\n2 7 1\\n1 2 8\\n</code></pre></div>\\n</td></tr></table>\\n\\n<p>Output</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre>1\\n2\\n3</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code>2\\n3\\n2\\n</code></pre></div>\\n</td></tr></table>\\n\\n<h2 id=\\"solution\\">Solution</h2>\\n<p>莫队求 Mex 经典题，用带修莫队维护每个数的出现次数和出现次数的出现次数，然后暴力从 <script type=\\"math/tex\\">1<\/script> 开始遍历找到第一个出现次数的出现次数为 <script type=\\"math/tex\\">0<\/script> 的即为 Mex（此步为 <script type=\\"math/tex\\">O(\\\\sqrt{n})<\/script>）</p>\\n<table class=\\"codehilitetable\\"><tr><td class=\\"linenos\\"><div class=\\"linenodiv\\"><pre> 1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68</pre></div></td><td class=\\"code\\"><div class=\\"codehilite\\"><pre><span></span><code><span class=\\"cp\\">#include</span> <span class=\\"cpf\\">&lt;bits/stdc++.h&gt;</span><span class=\\"cp\\"></span>\\n<span class=\\"k\\">using</span> <span class=\\"k\\">namespace</span> <span class=\\"n\\">std</span><span class=\\"p\\">;</span>\\n\\n<span class=\\"k\\">const</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">N</span> <span class=\\"o\\">=</span> <span class=\\"mf\\">2e5</span><span class=\\"o\\">+</span><span class=\\"mi\\">3</span><span class=\\"p\\">;</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">aa</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">val</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">ri</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">rx</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n<span class=\\"kt\\">int</span> <span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">occur</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">],</span> <span class=\\"n\\">ans</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n<span class=\\"k\\">struct</span> <span class=\\"n\\">Q</span> <span class=\\"p\\">{</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">i</span><span class=\\"p\\">,</span> <span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">t</span><span class=\\"p\\">;</span> <span class=\\"p\\">}</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">N</span><span class=\\"p\\">];</span>\\n\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">add</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">x</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">occur</span><span class=\\"p\\">[</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span><span class=\\"o\\">++</span><span class=\\"p\\">]</span> <span class=\\"o\\">--</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">occur</span><span class=\\"p\\">[</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]]</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">del</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">x</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"n\\">occur</span><span class=\\"p\\">[</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]</span><span class=\\"o\\">--</span><span class=\\"p\\">]</span> <span class=\\"o\\">--</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">occur</span><span class=\\"p\\">[</span><span class=\\"n\\">cnt</span><span class=\\"p\\">[</span><span class=\\"n\\">x</span><span class=\\"p\\">]]</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n<span class=\\"kt\\">void</span> <span class=\\"nf\\">update</span><span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">t</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"kt\\">int</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"n\\">ri</span><span class=\\"p\\">[</span><span class=\\"n\\">t</span><span class=\\"p\\">];</span>\\n  <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">ql</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&amp;&amp;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span>\\n    <span class=\\"n\\">del</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]),</span> <span class=\\"n\\">add</span><span class=\\"p\\">(</span><span class=\\"n\\">rx</span><span class=\\"p\\">[</span><span class=\\"n\\">t</span><span class=\\"p\\">]);</span>\\n  <span class=\\"n\\">swap</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">],</span> <span class=\\"n\\">rx</span><span class=\\"p\\">[</span><span class=\\"n\\">t</span><span class=\\"p\\">]);</span>\\n<span class=\\"p\\">}</span>\\n\\n<span class=\\"kt\\">int</span> <span class=\\"nf\\">main</span><span class=\\"p\\">()</span> <span class=\\"p\\">{</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">m</span><span class=\\"p\\">);</span>\\n  <span class=\\"n\\">vector</span><span class=\\"o\\">&lt;</span><span class=\\"kt\\">int</span><span class=\\"o\\">&gt;</span> <span class=\\"n\\">val</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">a</span><span class=\\"o\\">+</span><span class=\\"n\\">i</span><span class=\\"p\\">),</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">push_back</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]);</span>\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">nq</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">nt</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">op</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">m</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"n\\">scanf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d%d%d&quot;</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">op</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"o\\">&amp;</span><span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">if</span> <span class=\\"p\\">(</span><span class=\\"n\\">op</span> <span class=\\"o\\">==</span> <span class=\\"mi\\">1</span><span class=\\"p\\">)</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">nq</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">{</span><span class=\\"n\\">nq</span><span class=\\"p\\">,</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">y</span><span class=\\"p\\">,</span> <span class=\\"n\\">nt</span><span class=\\"p\\">},</span> <span class=\\"n\\">nq</span> <span class=\\"o\\">++</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">else</span> <span class=\\"p\\">{</span>\\n      <span class=\\"n\\">ri</span><span class=\\"p\\">[</span><span class=\\"n\\">nt</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">x</span><span class=\\"p\\">,</span> <span class=\\"n\\">rx</span><span class=\\"p\\">[</span><span class=\\"n\\">nt</span><span class=\\"o\\">++</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">y</span><span class=\\"p\\">;</span>\\n      <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">push_back</span><span class=\\"p\\">(</span><span class=\\"n\\">y</span><span class=\\"p\\">);</span>\\n    <span class=\\"p\\">}</span>\\n  <span class=\\"p\\">}</span>\\n\\n  <span class=\\"n\\">sort</span><span class=\\"p\\">(</span><span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">(),</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">end</span><span class=\\"p\\">());</span>\\n  <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">resize</span><span class=\\"p\\">(</span><span class=\\"n\\">unique</span><span class=\\"p\\">(</span><span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">(),</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">end</span><span class=\\"p\\">())</span> <span class=\\"o\\">-</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">());</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n    <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">lower_bound</span><span class=\\"p\\">(</span><span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">(),</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">end</span><span class=\\"p\\">(),</span> <span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">])</span> <span class=\\"o\\">-</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">();</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">nt</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span>\\n    <span class=\\"n\\">rx</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">lower_bound</span><span class=\\"p\\">(</span><span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">(),</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">end</span><span class=\\"p\\">(),</span> <span class=\\"n\\">rx</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">])</span> <span class=\\"o\\">-</span> <span class=\\"n\\">val</span><span class=\\"p\\">.</span><span class=\\"n\\">begin</span><span class=\\"p\\">();</span>\\n\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">bs</span> <span class=\\"o\\">=</span> <span class=\\"n\\">ceil</span><span class=\\"p\\">(</span><span class=\\"n\\">pow</span><span class=\\"p\\">(</span><span class=\\"n\\">n</span><span class=\\"p\\">,</span> <span class=\\"mf\\">2.0</span><span class=\\"o\\">/</span><span class=\\"mf\\">3.0</span><span class=\\"p\\">));</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;=</span> <span class=\\"n\\">n</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"p\\">(</span><span class=\\"n\\">i</span><span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">)</span><span class=\\"o\\">/</span><span class=\\"n\\">bs</span><span class=\\"p\\">;</span>\\n  <span class=\\"n\\">sort</span><span class=\\"p\\">(</span><span class=\\"n\\">q</span><span class=\\"p\\">,</span> <span class=\\"n\\">q</span><span class=\\"o\\">+</span><span class=\\"n\\">nq</span><span class=\\"p\\">,</span> <span class=\\"p\\">[</span><span class=\\"o\\">&amp;</span><span class=\\"p\\">](</span><span class=\\"n\\">Q</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">a</span><span class=\\"p\\">,</span> <span class=\\"n\\">Q</span><span class=\\"o\\">&amp;</span> <span class=\\"n\\">b</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"k\\">return</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">?</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">l</span><span class=\\"p\\">]</span>\\n         <span class=\\"o\\">:</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">r</span><span class=\\"p\\">]</span> <span class=\\"o\\">!=</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">r</span><span class=\\"p\\">]</span> <span class=\\"o\\">?</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">r</span><span class=\\"p\\">]</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">bno</span><span class=\\"p\\">[</span><span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">r</span><span class=\\"p\\">]</span> <span class=\\"o\\">:</span> <span class=\\"n\\">a</span><span class=\\"p\\">.</span><span class=\\"n\\">t</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">b</span><span class=\\"p\\">.</span><span class=\\"n\\">t</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">});</span>\\n\\n  <span class=\\"kt\\">int</span> <span class=\\"n\\">l</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">,</span> <span class=\\"n\\">r</span> <span class=\\"o\\">=</span> <span class=\\"o\\">-</span><span class=\\"mi\\">1</span><span class=\\"p\\">,</span> <span class=\\"n\\">t</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">nq</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">{</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">ql</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">l</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">r</span><span class=\\"p\\">,</span> <span class=\\"n\\">qt</span> <span class=\\"o\\">=</span> <span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">t</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">ql</span><span class=\\"p\\">)</span> <span class=\\"n\\">del</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">l</span><span class=\\"o\\">++</span><span class=\\"p\\">]);</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">l</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">ql</span><span class=\\"p\\">)</span> <span class=\\"n\\">add</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"o\\">--</span><span class=\\"n\\">l</span><span class=\\"p\\">]);</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">r</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"n\\">add</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"o\\">++</span><span class=\\"n\\">r</span><span class=\\"p\\">]);</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">r</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">qr</span><span class=\\"p\\">)</span> <span class=\\"n\\">del</span><span class=\\"p\\">(</span><span class=\\"n\\">a</span><span class=\\"p\\">[</span><span class=\\"n\\">r</span><span class=\\"o\\">--</span><span class=\\"p\\">]);</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">t</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">qt</span><span class=\\"p\\">)</span> <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"n\\">t</span><span class=\\"o\\">++</span><span class=\\"p\\">,</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">);</span>\\n    <span class=\\"k\\">while</span> <span class=\\"p\\">(</span><span class=\\"n\\">t</span> <span class=\\"o\\">&gt;</span> <span class=\\"n\\">qt</span><span class=\\"p\\">)</span> <span class=\\"n\\">update</span><span class=\\"p\\">(</span><span class=\\"o\\">--</span><span class=\\"n\\">t</span><span class=\\"p\\">,</span> <span class=\\"n\\">ql</span><span class=\\"p\\">,</span> <span class=\\"n\\">qr</span><span class=\\"p\\">);</span>\\n    <span class=\\"kt\\">int</span> <span class=\\"n\\">j</span><span class=\\"p\\">;</span>\\n    <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"n\\">j</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">1</span><span class=\\"p\\">;</span> <span class=\\"n\\">occur</span><span class=\\"p\\">[</span><span class=\\"n\\">j</span><span class=\\"p\\">];</span> <span class=\\"n\\">j</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"p\\">;</span>\\n    <span class=\\"n\\">ans</span><span class=\\"p\\">[</span><span class=\\"n\\">q</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">].</span><span class=\\"n\\">i</span><span class=\\"p\\">]</span> <span class=\\"o\\">=</span> <span class=\\"n\\">j</span><span class=\\"p\\">;</span>\\n  <span class=\\"p\\">}</span>\\n  <span class=\\"k\\">for</span> <span class=\\"p\\">(</span><span class=\\"kt\\">int</span> <span class=\\"n\\">i</span> <span class=\\"o\\">=</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">&lt;</span> <span class=\\"n\\">nq</span><span class=\\"p\\">;</span> <span class=\\"n\\">i</span> <span class=\\"o\\">++</span><span class=\\"p\\">)</span> <span class=\\"n\\">printf</span><span class=\\"p\\">(</span><span class=\\"s\\">&quot;%d</span><span class=\\"se\\">\\\\n</span><span class=\\"s\\">&quot;</span><span class=\\"p\\">,</span> <span class=\\"n\\">ans</span><span class=\\"p\\">[</span><span class=\\"n\\">i</span><span class=\\"p\\">]);</span>\\n  <span class=\\"k\\">return</span> <span class=\\"mi\\">0</span><span class=\\"p\\">;</span>\\n<span class=\\"p\\">}</span>\\n</code></pre></div>\\n</td></tr></table>","tags":[{"name":"data structures","url":"/tags/data-structures"}],"title":"CF-940F Machine Learning","updated_at":"2020-10-17T12:00:02+08:00","url":"/docs/data-structures/mo/cf-940f"}')}}]);
//# sourceMappingURL=chunk-2d0a2d3d.88a81bf2.js.map